{"version":3,"sources":["components/CSRF.js","utils.js","components/Pagination.js","components/Modal.js","components/Menu.js","components/pages/LandingPage.js","models/User.js","models/Job.js","components/Header.js","components/Footer.js","components/pages/AllJobsPage.js","components/pages/JobDetailPage.js","components/pages/UserDetailPage.js","components/Select.js","components/DatePicker.js","components/pages/SignUpPage.js","components/pages/ResetPasswordPage.js","components/pages/Error404Page.js","components/pages/ErrorPage.js","components/pages/Error400Page.js","components/pages/Error403Page.js","components/pages/Error500Page.js","components/pages/ProfileMePage.js","components/UploadBox.js","components/pages/ProfileEditJobPage.js","components/pages/ProfileAddJobPage.js","components/DialogLoading.js","components/SimpleBar.js","components/pages/ProfileDialogPage.js","components/pages/ProfileJobProposalsPage.js","components/Filter.js","components/pages/ProfileJobsPage.js","models/Dialog.js","components/pages/ProfileMessagesPage.js","components/pages/ProfilePendingJobsPage.js","components/pages/ProfileToDoJobsPage.js","components/pages/ProfileTryJobPage.js","App.js","serviceWorker.js","index.js"],"names":["CSRF","type","name","value","className","classNames","Object","keys","filter","key","join","forceNumericOnly","e","charCode","keyCode","search","object","URLSearchParams","toString","Pagination","query","useLocation","currentPage","parseInt","get","hasPreviousPage","hasNextPage","hasPrePreviousPage","hasPostNextPage","lastPage","to","page","src","alt","onClick","Modal","props","useState","open","setOpen","style","display","closeModal","onClose","useBus","event","payload","modalName","onOpen","useEventListener","stopPropagation","id","title","children","openModal","dispatch","closeMenu","AuthenticatedMenu","active","href","method","action","NotAuthenticatedMenu","menu_unregistered","Menu","isAuthenticated","openMenu","LandingPage","betaVersionInfoOpen","setBetaVersionInfoOpen","betaTestersInfoOpen","setBetaTestersInfoOpen","beta__item","opacity","pointerEvents","target","User","Job","price","user","twilioSID","peer","AuthenticatedHeader","currentUser","path","pathname","menu__link","isWorker","backgroundImage","profilePic","NotAuthenticatedHeader","Header","Footer","AllJobsPage","jobs","map","job","subject","timeString","owner","JobDetailPage","urlParams","useParams","history","useHistory","push","surname","linkReference","grade","description","deadlineString","files","length","file","downloadLink","format","UserDetailPage","login","email","age","reviews","rating","jobCountString","review","for","checked","body","author","Select","assign","classNamePrefix","LOCALE_RU","months","weekDays","short","isWeekend","weekStartingIndex","getToday","gregorainTodayObject","toNativeDate","date","Date","year","month","day","getMonthLength","getDate","transformDigit","digit","nextMonth","previousMonth","openMonthSelector","openYearSelector","closeMonthSelector","closeYearSelector","defaultPlaceholder","from","digitSeparator","yearLetterSkip","isRtl","locale","inputClassName","colorPrimary","SignUpPage","grades","birthday","setBirthday","currentStep","setCurrentStep","setName","setSurname","school","setSchool","setGrade","placeholder","onChange","inputName","inputPlaceholder","formatInputText","options","label","option","data-step","data-count","required","data-modal","ResetPasswordPage","autocomplete","token","Error404Page","ErrorPage","errorText","Error400Page","Error403Page","Error500Page","sendConfirmationLink","preventDefault","alert","ProfileMePage","withdrawalMethodError","setWithdrawalMethodError","withdrawalMethod","setWithdrawalMethod","backgroundColor","outline","balance","model__withdraw","error","indexOf","autoComplete","mask","onKeyDown","onKeyUp","amount","document","querySelector","innerHTML","Math","round","Number","EPSILON","enctype","UploadBox","setFiles","input","dispatchEvent","MouseEvent","multiple","console","log","newFiles","Array","moreLabel","ProfileEditJobPage","deadline","setDeadline","selected","ProfileAddJobPage","setDate","minimumDate","DialogLoading","setActive","setTimeout","dialog__loading","SimpleBar","ProfileDialogPage","autoHide","onSubmit","ProfileJobProposalsPage","proposals","proposal","message","Filter","subjects","show__filter","isMulti","ProfileJobsPage","classs","isPending","executant","transparent__blue","disabled","conversation","Dialog","ProfileMessagesPage","dialogs","searchQuery","setSearchQuery","dialog","match","RegExp","ProfilePendingJobsPage","pending","isFinished","tlmeString","ProfileToDoJobsPage","toDo","ProfileTryJobPage","App","menuOpen","setMenuOpen","overflow","exact","component","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"mWAQeA,MAJf,WACE,OAAO,2BAAOC,KAAK,SAASC,KAAK,QAAQC,MAHxB,qB,QCFbC,EAAY,SAACC,GAAD,OAChBC,OAAOC,KAAKF,GACTG,QAAO,SAACC,GAAD,OAASJ,EAAWI,MAC3BC,KAAK,MAEJC,EAAmB,SAACC,GACxB,IAAIH,EAAMG,EAAEC,UAAYD,EAAEE,SAAW,EAGrC,OACU,IAARL,GACQ,IAARA,GACQ,KAARA,GACQ,KAARA,GACQ,MAARA,GACQ,MAARA,GACCA,GAAO,IAAMA,GAAO,IACpBA,GAAO,IAAMA,GAAO,IACpBA,GAAO,IAAMA,GAAO,K,SCfzB,SAASM,EAAOC,GACd,MAAO,IAAM,IAAIC,gBAAgBD,GAAQE,WAqF5BC,MA9Ef,WACE,IAAMC,EAJC,IAAIH,gBAAgBI,cAAcN,QAKvCO,EAAcC,SAASH,EAAMI,IAAI,SAAW,GAE5CC,EAAkBH,EAAc,EAChCI,EAAcJ,EAFH,GAGXK,EAAqBL,EAAc,EACnCM,EAAkBN,EAAcO,GAClC,OACE,yBAAKzB,UAAU,gBACZqB,EACC,kBAAC,IAAD,CACEK,GAAI,CAAEf,OAAQA,EAAO,CAAEgB,KAAMT,EAAc,KAC3ClB,UAAU,QAEV,yBAAKA,UAAU,UAAU4B,IAAI,+BAA+BC,IAAI,MAGlE,uBAAG7B,UAAU,OAAO8B,QAAS,kBAAM,IACjC,yBAAK9B,UAAU,UAAU4B,IAAI,+BAA+BC,IAAI,MAGnER,EACC,kBAAC,IAAD,CAAMrB,UAAU,WAAW0B,GAAI,CAAEf,OAAQA,EAAO,CAAEgB,KAAM,MAAxD,KAIA,GAEDJ,EACC,kBAAC,IAAD,CACEvB,UAAU,WACV0B,GAAI,CAAEf,OAAQA,EAAO,CAAEgB,KAAMT,EAAc,MAE1CA,EAAc,GAGjB,GAEF,kBAAC,IAAD,CACElB,UAAU,kBACV0B,GAAI,CAAEf,OAAQA,EAAO,CAAEgB,KAAMT,MAE5BA,GAEFM,EACC,kBAAC,IAAD,CACExB,UAAU,WACV0B,GAAI,CAAEf,OAAQA,EAAO,CAAEgB,KAAMT,EAAc,MAE1CA,EAAc,GAGjB,GAEDI,EACC,kBAAC,IAAD,CAAMtB,UAAU,WAAW0B,GAAI,CAAEf,OAAQA,EAAO,CAAEgB,KArD3C,WAyDP,GAEDL,EACC,kBAAC,IAAD,CACEtB,UAAU,OACV0B,GAAI,CAAEf,OAAQA,EAAO,CAAEgB,KAAMT,EAAc,MAE3C,yBAAKlB,UAAU,UAAU4B,IAAI,+BAA+BC,IAAI,MAGlE,uBAAG7B,UAAU,OAAO8B,QAAS,kBAAM,IACjC,yBAAK9B,UAAU,UAAU4B,IAAI,+BAA+BC,IAAI,QCZ3DE,MA/Df,SAAeC,GAAQ,IAAD,EACIC,oBAAS,GADb,mBACbC,EADa,KACPC,EADO,KAElBC,EAAQ,CACNC,QAASH,EAAO,QAAU,QAU9B,SAASI,IACPH,GAAQ,GACJH,EAAMO,SACRP,EAAMO,UAsBV,OAjBAC,YAAO,mBAAmB,SAACC,GACrBA,EAAMC,QAAQC,YAAcX,EAAMlC,OAftCqC,GAAQ,GACJH,EAAMY,QACRZ,EAAMY,aAmBVJ,YAAO,qBAAqB,kBAAMF,OAGlCO,YAAiB,WAAW,SAACJ,GACL,KAAlBA,EAAM/B,UACR+B,EAAMK,kBACNR,QAKF,yBAAKtC,UAAU,gBACb,yBAAKA,UAAU,UAAU8B,QAAS,kBAAMQ,KAAcF,MAAOA,IAC7D,yBACEpC,UAAS,gBAAWgC,EAAMhC,WAC1B+C,GAAE,UAAKf,EAAMlC,KAAX,SACFsC,MAAOA,GAEP,yBAAKpC,UAAU,eAAe8B,QAAS,kBAAMQ,MAC3C,yBAAKtC,UAAU,UAAU4B,IAAI,0BAA0BC,IAAI,MAE7D,yBAAK7B,UAAU,gBAAgBgC,EAAMgB,OACpChB,EAAMiB,YAcR,SAASC,EAAUP,GACxBQ,YAAS,CAAEtD,KAAM,sBACjBuD,IACAD,YAAS,CAAEtD,KAAM,kBAAmB6C,QAAS,CAAEC,eCpEjD,SAASU,EAAkBrB,GACzB,OACE,yBACEe,GAAG,OACH/C,UAAWA,EAAU,CAAEsD,OAAQtB,EAAME,OACrCE,MAAOJ,EAAMI,OAEb,yBAAKW,GAAG,cAAcjB,QAASsB,GAC7B,yBAAKpD,UAAU,UAAU4B,IAAI,0BAA0BC,IAAI,MAE7D,yBAAK7B,UAAU,cACb,uBAAGA,UAAU,oBAAoBuD,KAAK,YAAYzB,QAASsB,GAA3D,mFAGA,uBAAGpD,UAAU,aAAauD,KAAK,gBAAgBzB,QAASsB,GAAxD,mFAGA,uBAAGpD,UAAU,aAAauD,KAAK,mBAAmBzB,QAASsB,GAA3D,sEAGA,uBAAGpD,UAAU,aAAauD,KAAK,oBAAoBzB,QAASsB,GAA5D,+CAIF,0BAAMI,OAAO,OAAOC,OAAO,WACzB,kBAAC,EAAD,MACA,4BAAQ5D,KAAK,UAAb,kGAMR,SAAS6D,EAAqB1B,GAC5B,OACE,yBACEhC,UAAWA,EAAU,CAAE2D,mBAAmB,EAAML,OAAQtB,EAAME,OAC9Da,GAAG,OACHX,MAAOJ,EAAMI,OAEb,yBAAKW,GAAG,cAAcjB,QAASsB,GAC7B,yBAAKpD,UAAU,UAAU4B,IAAI,0BAA0BC,IAAI,MAE7D,uBAAG7B,UAAU,OAAOuD,KAAK,KAAzB,WAGA,yBAAKvD,UAAU,cACb,uBAAGA,UAAU,aAAauD,KAAK,YAAYzB,QAASsB,GAApD,oFAIF,yBAAKpD,UAAU,cAAc8B,QAAS,kBAAMoB,EAAU,YAAtD,mCAkCSU,MA3Bf,SAAc5B,GAAQ,IAAD,EACOC,oBAAS,GAA5B4B,EADY,sBAEC5B,oBAAS,GAFV,mBAEhBC,EAFgB,KAEVC,EAFU,KAGjBC,EAAQ,CAAEC,QAASH,EAAO,QAAU,QAiBtC,OAHAM,YAAO,kBAbM,WACTL,GAAQ,GACJH,EAAMY,QACRZ,EAAMY,YAWZJ,YAAO,mBARO,WACVL,GAAQ,GACJH,EAAMO,SACRP,EAAMO,aAOLsB,EACL,kBAACR,EAAD,CAAmBnB,KAAMA,EAAME,MAAOA,IAEtC,kBAACsB,EAAD,CAAsBxB,KAAMA,EAAME,MAAOA,KAKtC,SAAS0B,IACdX,YAAS,kBAEJ,SAASC,IACdD,YAAS,mBCqPIY,MA9Uf,WAAwB,IAAD,EACiC9B,oBAAS,GAD1C,mBACd+B,EADc,KACOC,EADP,OAE6BhC,oBAAS,GAFtC,mBAElBiC,EAFkB,KAEGC,EAFH,KAGrB,OACE,yBAAKnE,UAAU,WAAf,sBACE,4BAAQ+C,GAAG,SAAX,sBACE,yBAAK/C,UAAU,yBAAf,sBACE,yBAAKA,UAAU,eAAf,sBACE,uBAAGA,UAAU,OAAOuD,KAAK,IAAzB,kCAIF,yBAAKvD,UAAU,qBAAf,sBACE,yBAAKA,UAAU,gCAAf,sBACE,uBAAGA,UAAU,aAAauD,KAAK,iBAA/B,iHAGA,uBAAGvD,UAAU,aAAauD,KAAK,sBAA/B,4EAGA,uBAAGvD,UAAU,aAAauD,KAAK,gBAA/B,yFAKJ,yBAAKvD,UAAU,iBAAf,sBACE,uBAAGA,UAAU,4BAA4BuD,KAAK,UAA9C,6FAIF,yBAAKvD,UAAU,iBAAiB+C,GAAG,aAAajB,QAASgC,EAAzD,sBACE,yBAAK9D,UAAU,UAAU4B,IAAI,yBAAyBC,IAAI,GAA1D,0BAKN,6BAASkB,GAAG,gBAAZ,sBACE,yBAAK/C,UAAU,YAAf,sBACE,wBAAIA,UAAU,UAAd,oJACyB,+CADzB,mHAGA,wBAAIA,UAAU,aAAd,kNACqC,+CADrC,0KAIA,kBAAC,IAAD,CAAM0B,GAAG,YAAY1B,UAAU,wBAA/B,8DAGA,yBACEA,UAAU,aACV4B,IAAI,+BACJC,IAAI,GAHN,yBAOJ,6BAAS7B,UAAU,cAAc+C,GAAG,gBAApC,sBACE,yBAAK/C,UAAU,YAAf,sBACE,wBAAIA,UAAU,uBAAd,iHACA,yBAAKA,UAAU,kBAAf,sBACE,yBACEA,UAAU,aACV4B,IAAI,6BACJC,IAAI,GAHN,uBAKA,yBAAK7B,UAAU,cAAf,sBACE,yBAAKA,UAAU,OAAf,2BACA,yBAAKA,UAAU,UAAf,yIACA,yBAAKA,UAAU,aAAf,sPAIA,kBAAC,IAAD,CAAM0B,GAAG,YAAY1B,UAAU,aAA/B,gEAKJ,yBAAKA,UAAU,mBAAf,sBACE,yBAAKA,UAAU,cAAf,sBACE,yBAAKA,UAAU,OAAf,2BACA,yBAAKA,UAAU,UAAf,+DACA,yBAAKA,UAAU,aAAf,6MACqC,+CADrC,8GAKF,yBACEA,UAAU,aACV4B,IAAI,6BACJC,IAAI,GAHN,wBAMF,yBAAK7B,UAAU,kBAAf,sBACE,yBACEA,UAAU,aACV4B,IAAI,6BACJC,IAAI,GAHN,uBAKA,yBAAK7B,UAAU,cAAf,sBACE,yBAAKA,UAAU,OAAf,2BACA,yBAAKA,UAAU,UAAf,oJACA,yBAAKA,UAAU,aAAf,kPAC4C,+CAD5C,+KAQR,6BAASA,UAAU,cAAc+C,GAAG,qBAApC,sBACE,yBAAK/C,UAAU,YAAf,sBACE,yBAAKA,UAAU,4BAAf,qHACA,yBAAKA,UAAU,kCAAf,6TACiE,IAC/D,+CAFF,+RAKA,yBAAKA,UAAU,mBAAf,sBACE,yBAAKA,UAAU,cAAf,sBACE,yBAAKA,UAAU,OAAf,sBACE,yBAAK4B,IAAI,yBAAyBC,IAAI,GAAtC,wBAEF,yBAAK7B,UAAU,UAAf,uIACA,yBAAKA,UAAU,aAAf,iKAC4B,+CAD5B,gKAKF,yBACEA,UAAU,aACV4B,IAAI,kCACJC,IAAI,GAHN,wBAMF,yBAAK7B,UAAU,kBAAf,sBACE,yBACEA,UAAU,aACV4B,IAAI,kCACJC,IAAI,GAHN,uBAKA,yBAAK7B,UAAU,cAAf,sBACE,yBAAKA,UAAU,OAAf,sBACE,yBAAK4B,IAAI,wBAAwBC,IAAI,GAArC,wBAEF,yBAAK7B,UAAU,UAAf,iIACA,yBAAKA,UAAU,aAAf,0SAKJ,yBAAKA,UAAU,mBAAf,sBACE,yBAAKA,UAAU,cAAf,sBACE,yBAAKA,UAAU,OAAf,sBACG,IACD,yBAAK4B,IAAI,0BAA0BC,IAAI,GAAvC,wBAEF,yBAAK7B,UAAU,UAAf,oGACA,yBAAKA,UAAU,aAAf,gMACkC,+CADlC,iJAKF,yBACEA,UAAU,aACV4B,IAAI,kCACJC,IAAI,GAHN,0BAQN,6BAASkB,GAAG,eAAZ,sBACE,yBAAK/C,UAAU,YAAf,sBACE,yBAAKA,UAAU,sBAAf,uFACA,yBAAKA,UAAU,4BAAf,sTACyD,+CADzD,+OAIA,yBACEA,UAAWA,EAAU,CACnBoE,YAAY,EACZd,OAAQU,IAHZ,sBAME,yBACEhE,UAAU,uBACV8B,QAAS,kBAAMmC,GAAuB,IAFxC,sBAIE,yBAAKjE,UAAU,UAAU4B,IAAI,yBAAyBC,IAAI,GAA1D,wBAEF,yBACE7B,UAAU,wBACV8B,QAAS,kBAAMmC,GAAuB,IAFxC,sBAIE,yBAAKjE,UAAU,UAAU4B,IAAI,yBAAyBC,IAAI,GAA1D,wBAEF,yBAAK7B,UAAU,sBAAf,kIACA,yBACEA,UAAU,gBACVoC,MAAO,CAAEC,QAAS2B,EAAsB,QAAU,QAFpD,sBAIE,yBAAKhE,UAAU,4BAAf,6YAEY,+CAFZ,mVAKA,uBACEA,UAAU,aACVuD,KAAK,YACLnB,MAAO,CACLiC,QAASL,EAAsB,EAAI,EACnCM,cAAeN,EAAsB,MAAQ,QALjD,8FAYJ,yBACEhE,UAAWA,EAAU,CACnBoE,YAAY,EACZd,OAAQY,IAHZ,sBAME,yBACElE,UAAU,uBACV8B,QAAS,kBAAMqC,GAAuB,IAFxC,sBAIE,yBAAKnE,UAAU,UAAU4B,IAAI,yBAAyBC,IAAI,GAA1D,wBAEF,yBACE7B,UAAU,wBACV8B,QAAS,kBAAMqC,GAAuB,IAFxC,sBAIE,yBAAKnE,UAAU,UAAU4B,IAAI,yBAAyBC,IAAI,GAA1D,wBAEF,yBAAK7B,UAAU,sBAAf,2JACA,yBACEA,UAAU,gBACVoC,MAAO,CAAEC,QAAS6B,EAAsB,QAAU,QAFpD,sBAIE,yBAAKlE,UAAU,4BAAf,oPACmD,+CADnD,2RAGY,+CACV,+CACA,+CALF,uSAM2D,+CAN3D,iJASA,uBACEA,UAAU,aACVuD,KAAK,4BACLnB,MAAO,CACLiC,QAASH,EAAsB,EAAI,EACnCI,cAAeJ,EAAsB,MAAQ,QALjD,8EAcR,4BAAQnB,GAAG,SAAX,sBACE,yBAAK/C,UAAU,eAAf,sBACE,yBAAKA,UAAU,YAAf,sBACE,yBAAKA,UAAU,UAAf,sBACE,uBAAGA,UAAU,aAAauD,KAAK,YAA/B,wGAGA,yBACEvD,UAAU,cACV4B,IAAI,6BACJC,IAAI,GAHN,uBAKA,yBACE7B,UAAU,iBACV4B,IAAI,iCACJC,IAAI,GAHN,0BAQN,yBAAK7B,UAAU,eAAf,sBACE,yBAAKA,UAAU,YAAf,sBACE,0BAAMA,UAAU,kBAAhB,gEAGA,uBAAGA,UAAU,aAAauD,KAAK,6BAA/B,6CAGA,yBAAKvD,UAAU,eAAf,sBACE,uBACEA,UAAU,kBACVuD,KAAK,oCACLgB,OAAO,SAHT,sBAKE,yBAAK3C,IAAI,qCAAqCC,IAAI,GAAlD,wBAEF,uBACE7B,UAAU,WACVuD,KAAK,4BACLgB,OAAO,SAHT,sBAKE,yBAAK3C,IAAI,8BAA8BC,IAAI,GAA3C,4BAMV,yBAAK7B,UAAU,UAAf,uBACA,yBAAK+C,GAAG,OAAR,sBACE,yBAAKA,GAAG,cAAcjB,QAASsB,EAA/B,sBACE,yBAAKpD,UAAU,UAAU4B,IAAI,0BAA0BC,IAAI,GAA3D,wBAEF,yBAAK7B,UAAU,aAAf,sBACE,uBAAGA,UAAU,aAAauD,KAAK,iBAAiBzB,QAASsB,EAAzD,iHAGA,uBACEpD,UAAU,aACVuD,KAAK,sBACLzB,QAASsB,EAHX,4EAOA,uBAAGpD,UAAU,aAAauD,KAAK,gBAAgBzB,QAASsB,EAAxD,2F,gBCvQKoB,E,2FA5DX,OAAO,I,4BAIP,MAAO,wB,4BAIP,MAAO,Y,2BAIP,MAAO,S,8BAIP,MAAO,Q,4BAIP,OAAO,K,6BAIP,MAAO,0H,8BAoBP,MAAO,K,iCAZP,MAAO,K,0BAIP,OAAO,K,iCAIP,MAAO,oB,+BAQP,OAAO,I,6BAIP,OAAO,I,qCAIP,OAAO,Q,KCfIC,E,2FA1CX,OAAO,M,4BAIP,OAAO,IAAID,I,4BAIX,MAAO,c,8BAIP,MAAO,gB,4BAIP,OAAO,M,4BAIP,MAAO,K,gCAIP,MAAO,K,gCAIP,MAAO,CACLE,MAAO,IACPC,KAAM,IAAIH,K,mCAKZ,MAAO,CACLI,UAAW,KACXC,KAAM,IAAIL,O,KCpChB,SAASM,IAAuB,IAAD,EACP7C,mBAAS,IAAIuC,GAA5BO,EADsB,oBAE3BC,EAAO/D,cAAcgE,SACvB,OACE,4BAAQjF,UAAU,SAAS+C,GAAG,UAC5B,yBAAK/C,UAAU,0BACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,OAAOuD,KAAK,KAAzB,YAIF,yBAAKvD,UAAU,sBACb,yBAAKA,UAAU,mBACb,uBAAGuD,KAAK,oBACN,yBAAK3B,IAAI,4BAGb,yBAAK5B,UAAU,oBACb,uBACEA,UAAWA,EAAU,CACnBkF,YAAY,EACZ5B,OAAiB,cAAT0B,IAEVzB,KAAK,aALP,mFASA,uBACEvD,UAAWA,EAAU,CACnBkF,YAAY,EACZ5B,OAAiB,kBAAT0B,IAEVzB,KAAK,iBALP,mFASA,uBACEvD,UAAWA,EAAU,CACnBkF,YAAY,EACZ5B,OAAiB,qBAAT0B,IAEVzB,KAAK,oBALP,sEASCwB,EAAYI,SACX,uBACEnF,UAAWA,EAAU,CACnBkF,YAAY,EACZ5B,OAAiB,kBAAT0B,IAEVzB,KAAK,iBALP,+CAUA,KAIN,uBAAGvD,UAAU,kBAAkBuD,KAAK,qBAClC,yBAAKvD,UAAU,UAAU4B,IAAI,wBAAwBC,IAAI,MAE3D,yBAAK7B,UAAU,gBACb,uBACEA,UAAU,aACVuD,KAAK,cACLnB,MAAO,CAAEgD,gBAAgB,QAAD,OAAUL,EAAYM,WAAtB,QAE1B,0BAAMrF,UAAU,oBAAoBwD,OAAO,OAAOC,OAAO,WACvD,kBAAC,EAAD,MACA,4BAAQzD,UAAU,eAAeH,KAAK,UACpC,yBAAKG,UAAU,UAAU4B,IAAI,0BAA0BC,IAAI,QAIjE,yBAAK7B,UAAU,iBAAiB+C,GAAG,aAAajB,QAASgC,GACvD,yBAAK9D,UAAU,UAAU4B,IAAI,yBAAyBC,IAAI,QAOpE,SAASyD,IACP,OACE,4BAAQtF,UAAU,sBAAsB+C,GAAG,UACzC,yBAAK/C,UAAU,0BACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,OAAOuD,KAAK,KAAzB,YAKF,uBACEvD,UAAU,gDACV8B,QAAS,kBAAMoB,EAAU,YAEzB,yBAAKtB,IAAI,iCAAiCC,IAAI,MAEhD,yBAAK7B,UAAU,sBACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,oBAAoBuD,KAAK,aAAtC,qFAKJ,4BACEzB,QAAS,kBAAMoB,EAAU,WACzBlD,UAAU,4CAFZ,kCAMA,uBAAGA,UAAU,yCAAyCuD,KAAK,WAA3D,sEAGA,yBAAKvD,UAAU,iBAAiB+C,GAAG,aAAajB,QAASgC,GACvD,yBAAK9D,UAAU,UAAU4B,IAAI,yBAAyBC,IAAI,QAYrD0D,MALf,WAAmB,IAAD,EACUtD,oBAAS,GACnC,OAFgB,oBAES,kBAAC6C,EAAD,MAA0B,kBAACQ,EAAD,OCpFtCE,MAhDf,WACE,OACE,4BAAQzC,GAAG,UACT,yBAAK/C,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,uBAAGA,UAAU,aAAauD,KAAK,aAA/B,kFAGA,yBAAKvD,UAAU,cAAc4B,IAAI,6BAA6BC,IAAI,KAClE,yBACE7B,UAAU,iBACV4B,IAAI,iCACJC,IAAI,QAKZ,yBAAK7B,UAAU,gBACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,mBAAhB,0CAGA,uBAAGA,UAAU,aAAauD,KAAK,8BAA/B,uBAGA,yBAAKvD,UAAU,gBACb,uBACEA,UAAU,kBACVuD,KAAK,oCACLgB,OAAO,UAEP,yBAAK3C,IAAI,qCAAqCC,IAAI,MAEpD,uBACE7B,UAAU,WACVuD,KAAK,4BACLgB,OAAO,UAEP,yBAAK3C,IAAI,8BAA8BC,IAAI,WCW1C4D,MA7Cf,WAAwB,IAAD,EACNxD,mBAAS,CAAC,IAAIwC,IAAtBiB,EADc,oBAGrB,OACE,yBAAK1F,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WAAf,mFACA,yBAAKA,UAAU,gBACZ0F,EAAKC,KAAI,SAACC,GAAD,OACR,kBAAC,IAAD,CACEvF,IAAKuF,EAAI7C,GACT/C,UAAU,OACV0B,GAAE,sBAAiBkE,EAAI7C,KAEvB,yBAAK/C,UAAU,cACb,yBAAKA,UAAU,gBACb,8BAAO4F,EAAIC,UAEb,yBAAK7F,UAAU,eAAe4F,EAAI5C,OAClC,yBAAKhD,UAAU,cAAc4F,EAAIE,aAEnC,yBAAK9F,UAAU,cACb,yBACEA,UAAU,eACVoC,MAAO,CACLgD,gBAAgB,QAAD,OAAUQ,EAAIG,MAAMV,WAApB,QAGnB,yBAAKrF,UAAU,eAAe4F,EAAIlB,MAAlC,gBAKR,kBAAC,EAAD,SAIN,kBAAC,EAAD,QCoISsB,MA9Kf,WACQ,IAAAC,EAAYC,cAAZ,EACYjE,mBAAS,IAAIwC,EAAIwB,EAAUlD,KADvC,mBACH6C,EADG,KAEJO,GAFI,KAEMC,eAEZ,OACE,yBAAKpG,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,WAAW4F,EAAI5C,OAC9B,yBAAKhD,UAAU,cACb,yBAAKA,UAAU,cAAf,kCACA,uBAAGA,UAAU,eAAeuD,KAAK,KAC/B,+FAEF,yBAAKvD,UAAU,eAAe4F,EAAIlB,MAAlC,WAEF,yBAAK1E,UAAU,cACb,yBACEA,UAAU,eACV+C,GAAG,aACHjB,QAAS,kBAAMqE,EAAQE,KAAR,uBAA6BT,EAAIG,MAAMhD,OAEtD,yBACE/C,UAAU,cACVoC,MAAO,CACLgD,gBAAgB,QAAD,OAAUQ,EAAIG,MAAMV,eAGvC,yBAAKrF,UAAU,gBACb,yBAAKA,UAAU,gBACZ4F,EAAIG,MAAMO,QADb,IACuBV,EAAIG,MAAMjG,MAEjC,yBAAKE,UAAU,oBACZ,IACA4F,EAAIG,MAAMQ,cAAe,OAIhC,yBAAKvG,UAAU,iBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SAAf,kCACA,yBAAKA,UAAU,QAAQ4F,EAAIY,MAA3B,oCAEF,yBAAKxG,UAAU,cACb,yBAAKA,UAAU,SAAf,oDACA,yBAAKA,UAAU,QAAQ4F,EAAIa,cAE7B,yBAAKzG,UAAU,cACb,yBAAKA,UAAU,SAAf,kCACA,yBAAKA,UAAU,QAAf,gBAA0B4F,EAAIc,iBAEhC,yBAAK1G,UAAU,cACb,yBAAKA,UAAU,SAAf,0DACA,yBAAKA,UAAU,QACZ4F,EAAIe,MAAMC,OACT,yBAAK5G,UAAU,mBACZ4F,EAAIe,MAAMhB,KAAI,SAACkB,GAAD,OACb,kBAAC,IAAD,CACE7G,UAAU,gBACV0B,GAAE,WAAMmF,EAAKC,eAEb,yBAAK9G,UAAU,UACb,0BAAMA,UAAU,gBACb6G,EAAKE,QAER,yBACE/G,UAAU,uBACV4B,IAAI,2BACJC,IAAI,MAGR,yBAAK7B,UAAU,QAAQ6G,EAAK/G,WAKlC,yBAAKE,UAAU,QAAf,wFAsFV,OC7CGgH,MAvHf,WACQ,IAAAf,EAAYC,cAAZ,EACKjE,mBAAS,IAAIuC,EAAKyB,EAAUgB,QAApCtC,EADG,sBAEgB1C,oBAAS,GAA5B4B,EAFG,oBAGN,OACE,yBAAK7D,UAAU,gBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,yBACEA,UAAU,YACVoC,MAAO,CACLgD,gBAAgB,QAAD,OAAUT,EAAKU,WAAf,QAGnB,yBAAKrF,UAAU,cACb,yBAAKA,UAAU,cACZ2E,EAAK7E,KADR,IACe6E,EAAK2B,SAEpB,yBAAKtG,UAAU,kBAAkB2E,EAAKsC,SAG1C,yBAAKjH,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAf,qDACA,yBAAKA,UAAU,eAAe2E,EAAKuC,QAErC,yBAAKlH,UAAU,eACb,yBAAKA,UAAU,eAAf,+CACA,yBAAKA,UAAU,eAAe2E,EAAKwC,IAAnC,wBAEF,yBAAKnH,UAAU,eACb,yBAAKA,UAAU,eAAf,mBACA,yBAAKA,UAAU,eAAe2E,EAAKmB,cAGtCjC,EACC,0BAAML,OAAO,OAAOC,OAAO,yBACzB,2BAAO5D,KAAK,SAASC,KAAK,OAAOC,MAAO4E,EAAKsC,QAC7C,kBAAC,EAAD,MACA,4BAAQpH,KAAK,SAASG,UAAU,cAAhC,4GAKF,IAGH2E,EAAKyC,QAAQR,OACZ,yBAAK5G,UAAU,wBACb,yBAAKA,UAAU,gBAAf,kFAEE,6BAFF,+CAIA,yBAAKA,UAAU,mBACZ2E,EAAK0C,OADR,eACuB1C,EAAK2C,gBAE5B,yBAAKtH,UAAU,iBACb,yBAAKA,UAAU,gBACZ2E,EAAKyC,QAAQzB,KAAI,SAAC4B,GAAD,OAChB,yBAAKvH,UAAU,UACb,yBAAKA,UAAU,eACZ,CAAC,EAAG,EAAG,EAAG,EAAG,GAAG2F,KAAI,SAAC0B,GAAD,OACnB,2BACEG,IAAG,gBAAWH,GACdrE,MAAK,mDAAaqE,EAAb,SAEL,2BACExH,KAAK,QACLkD,GAAE,gBAAWsE,GACbvH,KAAK,UACLC,MAAOsH,EACPI,QAASF,EAAOF,SAASA,SAKjC,yBAAKrH,UAAU,gBAAgBuH,EAAOG,MACtC,yBAAK1H,UAAU,kBACZuH,EAAOI,OAAO7H,KADjB,IACwByH,EAAOI,OAAOrB,gBAShD,yBAAKtG,UAAU,eACZ2E,EAAKQ,SACJ,yBAAKnF,UAAU,yBACZ2E,EAAK7E,KADR,gIAIA,6BACE,yBAAKE,UAAU,yBACZ2E,EAAK7E,KADR,uGAEE,6BAFF,mFAKA,yBAAKE,UAAU,iBACb,yBACEA,UAAU,YACV4B,IAAI,2BACJC,IAAI,Y,gBCjGX+F,MAXf,SAAgB5F,GACd,OACE,kBAAC,IACK9B,OAAO2H,OAAO,GAAI7F,EAAO,CAC3BhC,UAAW,SACX8H,gBAAiB,a,kBCJnBC,G,cAAY,CAEhBC,OAAQ,CACN,uCACA,6CACA,2BACA,uCACA,qBACA,2BACA,2BACA,uCACA,mDACA,6CACA,uCACA,8CAIFC,SAAU,CACR,CACEnI,KAAM,qEACNoI,MAAO,eACPC,WAAW,GAEb,CACErI,KAAM,qEACNoI,MAAO,gBAET,CACEpI,KAAM,6CACNoI,MAAO,gBAET,CACEpI,KAAM,iCACNoI,MAAO,gBAET,CACEpI,KAAM,6CACNoI,MAAO,gBAET,CACEpI,KAAM,6CACNoI,MAAO,gBAET,CACEpI,KAAM,6CACNoI,MAAO,eACPC,WAAW,IAKfC,kBAAmB,EAGnBC,SAvDgB,SAuDPC,GACP,OAAOA,GAITC,aA5DgB,SA4DHC,GACX,OAAO,IAAIC,KAAKD,EAAKE,KAAMF,EAAKG,MAAQ,EAAGH,EAAKI,MAIlDC,eAjEgB,SAiEDL,GACb,OAAO,IAAIC,KAAKD,EAAKE,KAAMF,EAAKG,MAAO,GAAGG,WAI5CC,eAtEgB,SAsEDC,GACb,OAAOA,GAITC,UAAW,wFACXC,cAAe,8FACfC,kBAAmB,8HACnBC,iBAAkB,kHAClBC,mBAAoB,6HACpBC,kBAAmB,iHACnBC,mBAAoB,sDAGpBC,KAAM,SACN9H,GAAI,eAGJ+H,eAAgB,IAGhBC,eAAgB,EAGhBC,OAAO,IAGM,WAAU3H,GAQvB,OAPAA,EAAQ9B,OAAO2H,OAAO,GAAI7F,EAAO,CAC/B4H,OAAS5H,EAAM4H,QAA2B,OAAjB5H,EAAM4H,OAA8B5H,EAAM4H,OAAlB7B,EACjD8B,eAAgB7H,EAAM6H,eAClB7H,EAAM6H,eAAiB,WACvB,UACJC,aAAc,YAET,kBAAC,IAAe9H,IC6NV+H,MAnUf,WAAuB,IAAD,EACH9H,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAnD+H,EADa,sBAEQ/H,mBAAS,MAFjB,mBAEjBgI,EAFiB,KAEPC,EAFO,OAGcjI,mBAAS,GAHvB,mBAGjBkI,EAHiB,KAGJC,EAHI,OAIAnI,mBAAS,IAJT,mBAIjBnC,EAJiB,KAIXuK,EAJW,OAKMpI,mBAAS,IALf,mBAKjBqE,EALiB,KAKRgE,EALQ,OAMIrI,mBAAS,IANb,mBAMjBsI,EANiB,KAMTC,EANS,OAOEvI,mBAAS,MAPX,mBAOjBuE,EAPiB,KAOViE,EAPU,KAQpB,OACE,yBAAKzK,UAAU,kCACb,yBAAKA,UAAS,6BAAwBmK,IACpC,yBAAKnK,UAAU,gCACb,yBAAKA,UAAU,sBACb,4BAAQA,UAAU,sBAAsB+C,GAAG,UACzC,yBAAK/C,UAAU,gBACb,uBAAGA,UAAU,OAAOuD,KAAK,KAAzB,YAKF,uBAAGvD,UAAU,YAAYuD,KAAK,KAC5B,yBAAK3B,IAAI,8BAA8BC,IAAI,KAC3C,6EAGF,uBACE7B,UAAU,qDACV8B,QAAS,kBAAMoB,EAAU,YAF3B,mCAOF,yBAAKlD,UAAU,qBACb,yBAAKA,UAAU,WAAf,yKACA,0BACE+C,GAAG,aACH/C,UAAU,qBACVyD,OAAO,UACPD,OAAO,QAEP,yBAAKxD,UAAU,cAAc+C,GAAG,cAChC,kBAAC,EAAD,MACA,yBAAK/C,UAAU,0BACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,8BAAf,KACA,yBAAKA,UAAU,8BAAf,KACA,yBAAKA,UAAU,8BAAf,MAEF,yBACEA,UAAU,aACVoC,MAAO,CAAEC,QAAyB,IAAhB8H,EAAoB,QAAU,SAEhD,yBAAKnK,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,OACLC,KAAK,OACL4K,YAAY,qBACZ3K,MAAOD,EACP6K,SAAU,SAAClI,GAAD,OAAW4H,EAAQ5H,EAAM8B,OAAOxE,WAG9C,yBAAKC,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,OACLC,KAAK,UACL4K,YAAY,6CACZ3K,MAAOuG,EACPqE,SAAU,SAAClI,GAAD,OAAW6H,EAAW7H,EAAM8B,OAAOxE,WAGjD,yBAAKC,UAAU,kBACb,kBAAC,EAAD,CACE+C,GAAG,aACHhD,MAAOkK,EACPU,SAAUT,EACVU,UAAU,WACVf,eAAe,UACfgB,iBAAiB,4EACjBC,gBAAiB,kBACfb,EAAQ,UACDA,EAASrB,IADR,YACeqB,EAAStB,MADxB,YACiCsB,EAASvB,MAC9C,QAGR,yBACE1I,UAAU,gBACV4B,IAAI,6BACJC,IAAI,OAIV,yBAAK7B,UAAU,cACb,0BACEA,UAAU,6BACV8B,QAAS,WACHhC,EAAK8G,QAAUN,EAAQM,QAAUqD,GACnCG,EAAeD,EAAc,KAJnC,qCAaN,yBACEnK,UAAU,aACVoC,MAAO,CAAEC,QAAyB,IAAhB8H,EAAoB,QAAU,SAEhD,yBAAKnK,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,OACLC,KAAK,SACL4K,YAAY,iCACZ3K,MAAOwK,EACPI,SAAU,SAAClI,GAAD,OAAW+H,EAAU/H,EAAM8B,OAAOxE,WAGhD,yBAAKC,UAAU,gBACb,kBAAC,EAAD,CACE+C,GAAG,sBACHjD,KAAK,QACLiL,QAASf,EAAOrE,KAAI,SAACa,GAAD,MAAY,CAC9BwE,MAAM,GAAD,OAAKxE,EAAL,mCACLzG,MAAOyG,MAETkE,YAAY,iCACZ3K,MACEyG,EACI,CAAEzG,MAAOyG,EAAOwE,MAAM,GAAD,OAAKxE,EAAL,oCACrB,KAENmE,SAAU,SAACM,GAAD,OAAYR,EAASQ,EAAOlL,YAI5C,yBAAKC,UAAU,cACb,0BACEA,UAAU,gBACVkL,YAAU,IACVpJ,QAAS,kBAAMsI,EAAeD,EAAc,KAH9C,kCAOA,0BACEnK,UAAU,6BACVkL,YAAU,IACVC,aAAW,IACXrJ,QAAS,WACHyI,EAAO3D,QAAUJ,GACnB4D,EAAeD,EAAc,KANnC,qCAeN,yBACEnK,UAAU,aACVoC,MAAO,CAAEC,QAAyB,IAAhB8H,EAAoB,QAAU,SAEhD,yBAAKnK,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,QACLC,KAAK,QACL4K,YAAY,oGACZU,SAAS,cAGb,yBAAKpL,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,OACLC,KAAK,QACL4K,YAAY,iCACZU,SAAS,cAGb,yBAAKpL,UAAU,UACb,yBAAKA,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,WACLC,KAAK,WACL4K,YAAY,uCACZU,SAAS,cAGb,yBAAKpL,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,WACLC,KAAK,kBACL4K,YAAY,wCACZU,SAAS,gBAKjB,yBAAKpL,UAAU,cACb,0BACEA,UAAU,gBACVkL,YAAU,IACVpJ,QAAS,kBAAMsI,EAAeD,EAAc,KAE5C,yBACEvI,IAAI,uCACJC,IAAI,MAIR,4BACE7B,UAAU,oCACVH,KAAK,UAFP,+FAYZ,yBAAKG,UAAU,uBACb,yBACEA,UAAU,qBACVoC,MAAO,CAAEC,QAAyB,IAAhB8H,EAAoB,QAAU,SAEhD,yBAAKnK,UAAU,WAAf,mHACA,yBAAKA,UAAU,cAAf,gOAGA,yBACEA,UAAU,YACV4B,IAAI,6BACJC,IAAI,MAGR,yBACE7B,UAAU,qBACVoC,MAAO,CAAEC,QAAyB,IAAhB8H,EAAoB,QAAU,SAEhD,yBAAKnK,UAAU,WAAf,yCACA,yBAAKA,UAAU,cAAf,yMAGA,yBACEA,UAAU,YACV4B,IAAI,6BACJC,IAAI,MAGR,yBACE7B,UAAU,qBACVoC,MAAO,CAAEC,QAAyB,IAAhB8H,EAAoB,QAAU,SAEhD,yBAAKnK,UAAU,WAAf,6HACA,yBAAKA,UAAU,cAAf,yKACA,yBACEA,UAAU,YACV4B,IAAI,6BACJC,IAAI,SAOd,yBAAK7B,UAAU,YACf,yBAAKA,UAAU,sBAAsBqL,aAAW,QAAQtI,GAAG,cACzD,yBAAK/C,UAAU,gBACb,yBAAKA,UAAU,UAAU4B,IAAI,0BAA0BC,IAAI,MAE7D,yBAAK7B,UAAU,gBAAf,6HACA,0BACEA,UAAU,cACVwD,OAAO,OACPC,OAAO,SACPV,GAAG,aAEH,kBAAC,EAAD,MACA,yBAAK/C,UAAU,eACb,yBAAKA,UAAU,gBAAf,+EACA,2BACEA,UAAU,eACVH,KAAK,QACLC,KAAK,QACLsL,SAAS,WACTV,YAAY,iFAGhB,yBAAK1K,UAAU,kBAAf,4VAGA,4BAAQA,UAAU,aAAaH,KAAK,UAApC,uEAIF,yBAAKG,UAAU,qBACb,uBAAGA,UAAU,8BAA8BqL,aAAW,UAAtD,kCAGA,uBAAGrL,UAAU,kBAAkBuD,KAAK,WAApC,oHC1QK+H,MAlDf,WACQ,IAAArF,EAAYC,cAAZ,EACKjE,mBAAS,IAAIuC,GAArBG,EADG,oBAEN,OACE,yBAAK3E,UAAU,iBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,WAAd,uEAEA,0BACEA,UAAU,cACVwD,OAAO,OACPC,OAAO,gBACPV,GAAG,mBAEH,yBAAK/C,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,WACL6K,YAAY,sEACZa,aAAa,MACbzL,KAAK,WACLsL,SAAS,cAGb,yBAAKpL,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,WACL6K,YAAY,4GACZa,aAAa,MACbzL,KAAK,kBACLsL,SAAS,cAGb,2BAAOvL,KAAK,SAASC,KAAK,SAASC,MAAO4E,EAAK5B,KAC/C,2BAAOlD,KAAK,SAASC,KAAK,gBAAgBC,MAAOkG,EAAUuF,QAC3D,kBAAC,EAAD,MACA,4BAAQxL,UAAU,0BAA0BH,KAAK,UAAjD,4FAMN,kBAAC,EAAD,QCvCS4L,MATf,WACE,OACE,yBAAKzL,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QAAQ4B,IAAI,uBAAuBC,IAAI,OCU7C6J,MAbf,SAAmB1J,GACjB,OACE,yBAAKhC,UAAU,YACb,kBAAC,EAAD,MACA,wBAAIA,UAAU,WAAWgC,EAAM2J,UAA/B,OCDSC,MAJf,WACE,OAAO,kBAAC,EAAD,CAAWD,UAAU,0MCGfE,MAJf,WACE,OAAO,kBAAC,EAAD,CAAWF,UAAU,oECGfG,MAJf,WACE,OAAO,kBAAC,EAAD,CAAWH,UAAU,sF,kBCK9B,SAASI,EAAqBtJ,GAU5B,OAFAA,EAAMuJ,iBACNC,MAAM,2BACC,EAkhBMC,MA/gBf,WACQ,IAAAvH,EAAO,IAAIH,EAAX,EACgDvC,oBAAS,GADzD,mBACHkK,EADG,KACoBC,EADpB,OAEsCnK,mBAAS,CACjDlC,MAAO,KACPiL,MAAO,KAJL,mBAEHqB,EAFG,KAEeC,EAFf,KAiBN,OACE,yBAAKtM,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,eAAe4B,IAAI,uBAAuBC,IAAI,KAC7D,yBAAK7B,UAAU,gBAAgB+C,GAAG,iBAChC,yBAAKnB,IAAI,0BAA0BC,IAAI,MAEzC,yBAAK7B,UAAU,mBACb,yBAAKA,UAAU,iBAAf,qGACA,yBAAKA,UAAU,uBAAf,+TACgE,IAC9D,6BAFF,6CAGU,IACR,uBACE+C,GAAG,uBACHQ,KAAK,IACLzB,QAASiK,GAHX,4BAJF,6JAgBN,yBAAK/L,UAAU,QACb,yBAAKA,UAAU,aAAa+C,GAAG,YAC7B,yBAAK/C,UAAU,cAAc+C,GAAG,eAElC,yBAAK/C,UAAU,wBACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,cAAc8B,QAAS,kBAAMoB,EAAU,YAClD,yBAAKlD,UAAU,cACb,yBACEA,UAAU,YACVoC,MAAO,CAAEgD,gBAAgB,QAAD,OAAUT,EAAKU,WAAf,QAE1B,yBAAKrF,UAAU,cACb,yBAAKA,UAAU,cACZ2E,EAAK7E,KADR,IACe6E,EAAK2B,SAEpB,yBAAKtG,UAAU,kBAAkB2E,EAAKsC,UAI5C,yBAAKjH,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAf,gFACA,yBAAKA,UAAU,eAAe2E,EAAKuC,OACnC,2BACElH,UAAU,cACVH,KAAK,OACLC,KAAK,QACLC,MAAO4E,EAAKuC,QAEd,yBAAKlH,UAAU,cACb,4BACEA,UAAU,cACV8B,QAAS,kBAAMoB,EAAU,UACzBd,MAAO,CAAEmK,gBAAiB,cAAeC,QAAS,SAElD,yBACExM,UAAU,UACV4B,IAAI,yBACJC,IAAI,QAKZ,yBAAK7B,UAAU,eACb,yBAAKA,UAAU,eAAf,+CACA,yBAAKA,UAAU,eAAe2E,EAAKwC,IAAnC,uBACA,2BACEnH,UAAU,cACVH,KAAK,OACLC,KAAK,MACLC,MAAO4E,EAAKwC,MAEd,yBAAKnH,UAAU,cACb,yBACEA,UAAU,UACV4B,IAAI,yBACJC,IAAI,OAIV,yBAAK7B,UAAU,eACb,yBAAKA,UAAU,eAAf,mBACA,yBAAKA,UAAU,eAAe2E,EAAKmB,aAErC,yBAAK9F,UAAU,eACb,yBAAKA,UAAU,eAAf,yCACA,yBAAKA,UAAU,eAAe2E,EAAK8H,QAAnC,WACA,yBAAKzM,UAAU,wBACb,4BACEA,UAAU,cACV8B,QAAS,kBAAMoB,EAAU,YACzBd,MAAO,CAAEmK,gBAAiB,cAAeC,QAAS,SAElD,yBACExM,UAAU,UACV4B,IAAI,+BACJC,IAAI,MAGR,4BACE7B,UAAU,cACV8B,QAAS,kBAAMoB,EAAU,aACzBd,MAAO,CAAEmK,gBAAiB,cAAeC,QAAS,SAElD,yBACExM,UAAU,UACV4B,IAAI,iCACJC,IAAI,SAMd,4BACE7B,UAAU,2CACV8B,QAAS,kBAAMoB,EAAU,cAF3B,yFAMA,uBACElD,UAAU,+BACVuD,KAAK,wBAFP,0FAOuB,IAAxBoB,EAAKyC,QAAQR,OACZ,yBAAK5G,UAAU,eACb,yBAAKA,UAAU,gBAAf,mFACiB,6BADjB,+CAGA,yBAAKA,UAAU,mBAAf,0FACE2E,EAAKQ,SAaL,GAZA,0BACE3B,OAAO,OACPC,OAAO,yBACPV,GAAG,cAEH,2BAAOlD,KAAK,SAASC,KAAK,SAASC,MAAO4E,EAAK5B,KAC/C,kBAAC,EAAD,MACA,4BAAQ/C,UAAU,wBAAwBH,KAAK,UAA/C,6GASN,yBAAKG,UAAU,wBACb,yBAAKA,UAAU,gBAAf,kFAEE,6BAFF,+CAIA,yBAAKA,UAAU,mBACZ2E,EAAK0C,OADR,eACuB1C,EAAK2C,eAAgB,KAE5C,yBAAKtH,UAAU,iBACb,yBAAKA,UAAU,gBACZ2E,EAAKyC,QAAQzB,KAAI,SAAC4B,GAAD,OAChB,yBAAKvH,UAAU,UACb,yBAAKA,UAAU,eACZ,CAAC,EAAG,EAAG,EAAG,EAAG,GAAG2F,KAAI,SAAC0B,GAAD,OACnB,2BACEG,IAAG,gBAAWH,GACdrE,MAAK,mDAAaqE,EAAb,SAEL,2BACExH,KAAK,QACLkD,GAAE,gBAAWsE,GACbvH,KAAK,UACLC,MAAOsH,EACPI,QAASF,EAAOF,SAAWA,SAKnC,yBAAKrH,UAAU,gBAAgBuH,EAAOG,MACtC,yBAAK1H,UAAU,kBACZuH,EAAOI,OAAO7H,KADjB,IACwByH,EAAOI,OAAOrB,kBAWtD,kBAAC,EAAD,CAAOxG,KAAK,WAAWkD,MAAM,+FAC3B,0BACEhD,UAAU,cACVyD,OAAO,2BACPD,OAAO,OACPT,GAAG,kBAEH,yBAAK/C,UAAU,eACb,yBAAKA,UAAU,gBAAf,mFACA,2BACEA,UAAU,eACVH,KAAK,WACLC,KAAK,cACLsL,SAAS,WACTV,YAAY,qFAGhB,yBAAK1K,UAAU,eACb,yBAAKA,UAAU,gBAAf,uEACA,2BACEA,UAAU,eACVH,KAAK,WACLC,KAAK,cACLsL,SAAS,WACTV,YAAY,yEAGhB,yBAAK1K,UAAU,eACb,yBAAKA,UAAU,gBAAf,6GACA,2BACEA,UAAU,eACVH,KAAK,WACLC,KAAK,kBACLsL,SAAS,WACTV,YAAY,+GAGhB,kBAAC,EAAD,MACA,4BAAQ1K,UAAU,aAAaH,KAAK,UAApC,2FAKJ,kBAAC,EAAD,CAAOmD,MAAM,+HAA2BlD,KAAK,SAC3C,0BACEE,UAAU,cACVyD,OAAO,wBACPD,OAAO,OACPT,GAAG,aAEH,yBAAK/C,UAAU,eACb,yBAAKA,UAAU,gBAAf,oDACA,2BACEA,UAAU,eACVH,KAAK,QACLC,KAAK,WACLsL,SAAS,WACTV,YAAY,sDAGhB,yBAAK1K,UAAU,eACb,yBAAKA,UAAU,gBAAf,wCACA,2BACEA,UAAU,eACVH,KAAK,QACLC,KAAK,WACLsL,SAAS,WACTV,YAAY,0CAGhB,yBAAK1K,UAAU,eACb,yBAAKA,UAAU,gBAAf,4EACA,2BACEA,UAAU,eACVH,KAAK,QACLC,KAAK,eACLsL,SAAS,WACTV,YAAY,8EAGhB,kBAAC,EAAD,MACA,4BAAQ1K,UAAU,aAAaH,KAAK,UAApC,kIAKJ,kBAAC,EAAD,CACEmD,MAAM,8HACNlD,KAAK,WACLE,UAAWA,EAAU,CACnB0M,iBAAiB,EACjBC,MAAOR,IAET5J,QAAS,WACP6J,GAAyB,GACzBE,EAAoB,CAAEvM,MAAO,KAAMiL,MAAO,OAG5C,yBAAKhL,UAAU,eAAf,+HACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,gBAAf,mFACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACE+K,QAAS,CACP,CAAEhL,MAAO,OAAQiL,MAAO,8EACxB,CAAEjL,MAAO,OAAQiL,MAAO,gGAE1BL,SAAU,SAACM,GAAD,OAAYqB,EAAoBrB,IAC1CnL,KAAK,SACL4K,YAAY,uDAGhB,yBACE1K,UAAU,sBACV4B,IAAI,6BAGR,4BACE5B,UAAU,aACVH,KAAK,SACLiC,QAzUV,WACE,MAAI,CAAC,OAAQ,QAAQ8K,QAAQP,EAAiBtM,OAAS,EAC9CmD,EAAUmJ,EAAiBtM,OACxBsM,EAAiBtM,MAGpBqM,GAAyB,QAFhC,IAkUI,oCASJ,kBAAC,EAAD,CACEtM,KAAK,OACLkD,MAAM,6HACNhD,UAAU,eAEV,yBAAKA,UAAU,eAAf,qHACA,0BACEA,UAAU,cACV+C,GAAG,mBACHS,OAAO,OACPC,OAAO,0BAEP,yBAAKzD,UAAU,eACb,yBAAKA,UAAU,gBAAf,wFACA,kBAAC,IAAD,CACEA,UAAU,eACVF,KAAK,UACLiD,GAAG,aACHlD,KAAK,MACLgN,cAAc,EACdzB,UAAU,EACVV,YAAY,GACZoC,KAAK,kBAGT,yBAAK9M,UAAU,eACb,yBAAKA,UAAU,gBAAf,8EACA,yBAAKA,UAAU,kBACb,2BACEA,UAAU,eACVH,KAAK,MACLC,KAAK,SACLyL,aAAa,MACbH,SAAS,WACTV,YAAY,GACZ3H,GAAG,kBACHgK,UAAWxM,EACXyM,QAAS,SAACxM,GACR,IAAMyM,GAAUzM,EAAE+D,OAAOxE,MACzBmN,SAASC,cAAc,mBAAmBC,UACxCH,EACAI,KAAKC,MAAyC,KAAzB,IAATL,EAAgBM,OAAOC,UAAkB,SAK/D,kBAAC,EAAD,MACA,yBAAKxN,UAAU,kBAAf,sJACA,yBAAKA,UAAU,kBAAf,+EACkB,0BAAM+C,GAAG,kBAAT,KADlB,yCAGA,4BAAQ/C,UAAU,aAAaH,KAAK,UAApC,gDAKJ,kBAAC,EAAD,CAAOG,UAAU,cAAcF,KAAK,OAAOkD,MAAM,8EAC/C,yBAAKhD,UAAU,eAAf,qHACA,0BACEA,UAAU,cACV+C,GAAG,mBACHS,OAAO,OACPC,OAAO,0BAEP,yBAAKzD,UAAU,eACb,yBAAKA,UAAU,gBAAf,qDACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACE+C,GAAG,aACHjD,KAAK,WACLsL,UAAU,EACVL,QAAS,CACP,CAAEhL,MAAO,OAAQiL,MAAO,QACxB,CAAEjL,MAAO,aAAciL,MAAO,cAC9B,CAAEjL,MAAO,MAAOiL,MAAO,sBACvB,CAAEjL,MAAO,OAAQiL,MAAO,2GAE1BN,YAAY,wDAIlB,yBAAK1K,UAAU,eACb,yBAAKA,UAAU,gBAAf,iEACA,kBAAC,IAAD,CACEA,UAAU,eACV+C,GAAG,aACHlD,KAAK,MACLC,KAAK,UACL+M,cAAc,EACdzB,UAAU,EACVV,YAAY,GACZoC,KAAK,yBAGT,yBAAK9M,UAAU,eACb,yBAAKA,UAAU,gBAAf,8EACA,yBAAKA,UAAU,kBACb,2BACEA,UAAU,eACV+C,GAAG,kBACHlD,KAAK,MACLC,KAAK,SACLyL,aAAa,MACbH,SAAS,WACTV,YAAY,GACZqC,UAAWxM,EACXyM,QAAS,SAACxM,GACR,IAAMyM,GAAUzM,EAAE+D,OAAOxE,MACzBmN,SAASC,cAAc,mBAAmBC,UACxCH,EACAI,KAAKC,MAAyC,KAAzB,IAATL,EAAgBM,OAAOC,UAAkB,IACrD,MAfR,WAqBF,yBAAKxN,UAAU,kBAAf,sMAGA,yBAAKA,UAAU,kBAAf,+EACkB,0BAAM+C,GAAG,kBAAT,KADlB,yCAGA,kBAAC,EAAD,MACA,4BAAQ/C,UAAU,aAAaH,KAAK,UAApC,gDAKJ,kBAAC,EAAD,CAAOC,KAAK,UAAUkD,MAAM,+FAC1B,0BACEhD,UAAU,cACVyD,OAAO,yBACPD,OAAO,OACPT,GAAG,eAEH,yBAAK/C,UAAU,eACb,yBAAKA,UAAU,gBAAf,+FACA,2BACEA,UAAU,eACVH,KAAK,OACLC,KAAK,SACLsL,SAAS,WACTV,YAAY,iGAGhB,kBAAC,EAAD,MACA,yBAAK1K,UAAU,kBAAf,uNAGA,yBAAKA,UAAU,kBAAf,sMAGA,4BAAQA,UAAU,aAAaH,KAAK,UAApC,qHAKJ,kBAAC,EAAD,CAAOC,KAAK,SAASkD,MAAM,gJACzB,0BACEhD,UAAU,cACVyD,OAAO,uBACPD,OAAO,OACPT,GAAG,aACH0K,QAAQ,uBAER,yBAAKzN,UAAU,eACb,yBAAKA,UAAU,gBAAf,8HACA,2BACEA,UAAU,eACVH,KAAK,OACLC,KAAK,SACLsL,SAAS,cAGb,4BAAQpL,UAAU,aAAaH,KAAK,UAApC,0E,QC9eK6N,OA5Cf,SAAmB1L,GAAQ,IAAD,EACEC,mBAAS,IADX,mBACjB0E,EADiB,KACVgH,EADU,KAExB,OACE,yBAAK3N,UAAU,eACb,yBAAKA,UAAU,iBACZ2G,EAAMhB,KAAI,SAACkB,GAAD,OACT,yBAAK7G,UAAU,gBACb,yBAAKA,UAAU,gBAAgB6G,EAAK/G,WAI1C,yBACEE,UAAU,4BACV8B,QAAS,SAACW,GACR,IAAImL,EAAQnL,EAAM8B,OAAO4I,cAAc,uBACnCS,GACFA,EAAMC,cAAc,IAAIC,WAAW,YAIvC,2BACE9N,UAAU,gBACVH,KAAK,OACLC,KAAMkC,EAAMlC,KACZiO,SAAU/L,EAAM+L,SAAW,WAAa,KACxChL,GAAIf,EAAMe,GACV4H,SAAU,SAAClI,GACTuL,QAAQC,IAAIxL,GACZ,IAAIyL,EAAWC,MAAM3E,KAAK7C,GAC1BuH,EAAS7H,KAAT,MAAA6H,EAAQ,YAASC,MAAM3E,KAAK/G,EAAM8B,OAAOoC,SACzCgH,EAASO,MAGb,yBAAKlO,UAAU,iBACZgC,EAAM+L,UAAYpH,EAAMC,QAAU5E,EAAMoM,UACrCpM,EAAMoM,UACNpM,EAAMgJ,QAGd,yBAAKhL,UAAU,qBC+FNqO,OAlIf,WAA+B,IAAD,EACdpM,mBAAS,IAAIwC,GAApBmB,EADqB,sBAIA3D,mBAAS,MAJT,mBAIzBqM,EAJyB,KAIfC,EAJe,KAK5B,OACE,yBAAKvO,UAAU,YACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,WAAd,2GACA,0BACEA,UAAU,cACVyN,QAAQ,sBACRjK,OAAO,OACPC,OAAO,oBACPV,GAAG,eAEH,yBAAK/C,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,OACLE,MAAO6F,EAAI5C,MACX0H,YAAY,mDACZ5K,KAAK,QACLsL,SAAS,cAGb,yBAAKpL,UAAU,gBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,2DACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACED,MAAOuO,EACP3D,SAAU,SAAC2D,GAAD,OAAcC,EAAYD,IACpC1D,UAAU,WACVf,eAAe,UACfgB,iBAAiB,0DACjBC,gBAAiB,kBACfwD,EAAQ,UACDA,EAAS1F,IADR,YACe0F,EAAS3F,MADxB,YACiC2F,EAAS5F,MAC9C,QAGR,yBACE1I,UAAU,gBACV4B,IAAI,6BACJC,IAAI,KACH,MAGP,yBAAK7B,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,4BACA,yBAAKA,UAAU,kBACb,2BACEA,UAAU,UACVH,KAAK,OACLE,MAAO6F,EAAIlB,MACXgG,YAAY,0DACZ5K,KAAK,QACLsL,SAAS,aAPb,SASI,QAKV,yBAAKpL,UAAU,gBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,qBAAhB,mFACA,0BAAMA,UAAU,qBAAhB,kCACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACE+C,GAAG,gBACHjD,KAAK,QACLiL,QA1ET,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IA0EPpF,KAAI,SAACa,GAAD,MAAY,CAC9BwE,MAAM,GAAD,OAAKxE,EAAL,mCACLzG,MAAOyG,EACPgI,SAAU5I,EAAIY,QAAUA,MAE1BkE,YAAY,wDAIlB,yBAAK1K,UAAU,gBACb,0BAAMA,UAAU,qBAAhB,+FACA,0BAAMA,UAAU,qBAAhB,8CACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACE+C,GAAG,kBACHjD,KAAK,UACLiL,QAzFP,CAAC,YAAa,aAyFWpF,KAAI,SAACE,GAAD,MAAc,CAClCmF,MAAOnF,EACP9F,MAAO8F,EACP2I,SAAU5I,EAAIC,UAAYA,MAE5B6E,YAAY,0DAMtB,yBAAK1K,UAAU,gBACb,8BACEA,UAAU,aACVF,KAAK,cACL4K,YAAY,8FACZU,SAAS,YAERxF,EAAIa,cAGT,kBAAC,GAAD,CACE3G,KAAK,cACLiO,UAAU,EACVhL,GAAG,mBACHiI,MAAM,wFACNoD,UAAU,sIAEZ,4BAAQpO,UAAU,0BAA0BH,KAAK,UAAjD,sHCQG4O,OAhIf,WACQ,MAEcxM,mBAAS,MAFvB,mBAEHuG,EAFG,KAEGkG,EAFH,KAGN,OACE,yBAAK1O,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,WAAd,2GAEA,0BACEA,UAAU,cACVyN,QAAQ,sBACRjK,OAAO,OACPC,OAAO,mBACPV,GAAG,cAEH,yBAAK/C,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,OACL6K,YAAY,mDACZ5K,KAAK,QACLsL,SAAS,aACR,KAEL,yBAAKpL,UAAU,gBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,2DACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACED,MAAOyI,EACPmC,SAAU,SAACnC,GAAD,OAAUkG,EAAQlG,IAC5BoC,UAAU,WACVgD,MAAM,UACN/C,iBAAiB,0DACjBC,gBAAiB,kBACftC,EAAI,UAAMA,EAAKI,IAAX,YAAkBJ,EAAKG,MAAvB,YAAgCH,EAAKE,MAAS,MAEpDiG,YAAa,IAAIlG,OAEnB,yBACEzI,UAAU,gBACV4B,IAAI,6BACJC,IAAI,KACH,MAGP,yBAAK7B,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,4BACA,yBAAKA,UAAU,kBACb,2BACEA,UAAU,UACVH,KAAK,OACL6K,YAAY,0DACZ5K,KAAK,QACLsL,SAAS,aACR,IACH,yBACEpL,UAAU,gBACV4B,IAAI,6BACJC,IAAI,SAMd,yBAAK7B,UAAU,gBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,qBAAhB,mFACA,0BAAMA,UAAU,qBAAhB,kCACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACE+C,GAAG,gBACHjD,KAAK,QACLiL,QA5ET,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IA4EPpF,KAAI,SAACa,GAAD,MAAY,CAC9BwE,MAAM,GAAD,OAAKxE,EAAL,mCACLzG,MAAOyG,MAETkE,YAAY,wDAIlB,yBAAK1K,UAAU,gBACb,0BAAMA,UAAU,qBAAhB,+FACA,0BAAMA,UAAU,qBAAhB,8CACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACE+C,GAAG,kBACHjD,KAAK,UACLiL,QA5FH,CAAC,yDAAa,8CA4FOpF,KAAI,SAACE,GAAD,MAAc,CAClCmF,MAAOnF,EACP9F,MAAO8F,MAET6E,YAAY,0DAMtB,yBAAK1K,UAAU,gBACb,8BACEA,UAAU,aACVF,KAAK,cACL4K,YAAY,8FACZU,SAAS,cAGb,kBAAC,GAAD,CACEtL,KAAK,cACLiD,GAAG,mBACHgL,UAAU,EACV/C,MAAM,4HACNoD,UAAU,0KAEZ,4BAAQpO,UAAU,0BAA0BH,KAAK,UAAjD,gHCvGG+O,OAlBf,WAA0B,IAAD,EACK3M,oBAAS,GADd,mBAChBqB,EADgB,KACRuL,EADQ,KAIvB,OADAC,YAAW,kBAAMD,GAAU,KAAQ,KAEjC,yBACE7O,UAAWA,EAAU,CAAE+O,iBAAiB,EAAMzL,WAC9CP,GAAG,kBAEH,yBAAK/C,UAAU,WACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,a,UCbNgP,I,OAAAA,GAAf,G,OCiHeC,OArGf,WACE,IAAMpK,EAAO,IAAIL,EAEjB,OACE,yBAAKxE,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CACE0B,GAAE,uBAAkBmD,EAAKoC,OACzBjH,UAAU,YACVoC,MAAO,CACLgD,gBAAgB,QAAD,OAAUP,EAAKQ,WAAf,QAGnB,kBAAC,IAAD,CAAMrF,UAAU,aAAa0B,GAAE,uBAAkBmD,EAAKoC,QACnDpC,EAAK/E,KADR,IACe+E,EAAKyB,UAGtB,yBAAKtG,UAAU,qBACb,4BACE+C,GAAG,0BACHlD,KAAK,0BAEL,yBAAKG,UAAU,6BACb,yBAAKA,UAAU,WACb,0BAAMA,UAAU,iBAAiB,kBACjC,0BAAMA,UAAU,iBAAiB,qBAIvC,4BACE+C,GAAG,6BACHlD,KAAK,0BAEL,yBAAKG,UAAU,+BACb,yBAAKA,UAAU,WACb,0BAAMA,UAAU,iBAAiB,kBACjC,0BAAMA,UAAU,iBAAiB,qBAIvC,kBAACgP,GAAD,CAAWE,UAAU,GACnB,0BACElP,UAAU,yBACV+C,GAAG,kBAGP,0BACE/C,UAAU,oBACV+C,GAAG,WACHoM,SAAU,SAAC1M,GACTA,EAAMuJ,iBA3DxBgC,QAAQC,IAAI,gBA+DI,2BAAOjO,UAAU,YACf,yBACEA,UAAU,UACV4B,IAAI,gCACJC,IAAI,KAEN,2BACE7B,UAAU,gBACVH,KAAK,OACLkD,GAAG,aACHjD,KAAK,UAIT,8BACEiD,GAAG,gBACH/C,UAAU,4BACVF,KAAK,UACL4K,YAAY,kFACZa,aAAa,QAGf,4BAAQvL,UAAU,kBAAkBH,KAAK,UACvC,yBACEG,UAAU,UACV4B,IAAI,kCACJC,IAAI,WAQlB,4BAAQD,IAAI,oEACZ,4BAAQA,IAAI,mBCvBLwN,OAnFf,WACE,IAAMxJ,EAAM,IAAInB,EAChB,OACE,yBAAKzE,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,sBAEb,yBAAKA,UAAU,WAAf,0DACA,yBAAKA,UAAU,iBACd4F,EAAIyJ,UAAU1J,KAAI,SAAC2J,GAAD,OACjB,yBAAKtP,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,kBACb,uBACEA,UAAU,gBACVuD,KAAK,IACLnB,MAAM,sDAEL,KAEH,yBAAKpC,UAAU,mBACb,yBAAKA,UAAU,SAAf,+CAGA,yBAAKA,UAAU,QAAf,6FAGJ,uBAAGA,UAAU,iBAAiBuD,KAAK,KAChC+L,EAAS3K,KAAK7E,KACf,6BACCwP,EAAS3K,KAAK2B,SAEjB,yBAAKtG,UAAU,kBAAf,qEAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,SAAf,4BACA,yBAAKA,UAAU,SAASsP,EAAS5K,MAAjC,YAEF,yBAAK1E,UAAU,qBACb,2BAAIsP,EAASC,WAGjB,yBAAKvP,UAAU,kBACb,0BACEyD,OAAO,2BACPD,OAAO,OACPxD,UAAU,sBAEV,kBAAC,EAAD,MACA,2BAAOH,KAAK,SAASE,MAAO6F,EAAI7C,GAAIjD,KAAK,UACzC,2BACED,KAAK,SACLE,MAAOuP,EAASvM,GAChBjD,KAAK,eAEP,4BAAQE,UAAU,2BAA2BH,KAAK,UAAlD,+CAIF,0BAAM4D,OAAO,yBAAyBD,OAAO,QAC3C,kBAAC,EAAD,MACA,2BAAO3D,KAAK,SAASE,MAAO6F,EAAI7C,GAAIjD,KAAK,UACzC,2BACED,KAAK,SACLE,MAAOuP,EAASvM,GAChBjD,KAAK,eAEP,4BAAQD,KAAK,SAASG,UAAU,0BAAhC,qECSLwP,OA9Ef,WAAmB,IAAD,EACGvN,mBAAS,CAAC,IAAtBwN,EADS,sBAEHxN,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAnD+H,EAFa,sBAGQ/H,oBAAS,GAHjB,mBAGbqB,EAHa,KAGLuL,EAHK,KAIhB,OACE,0BAAM7O,UAAU,mBACd,yBACEA,UAAWA,EAAU,CAAE,WAAW,EAAM0P,cAAc,EAAMpM,WAC5DxB,QAAS,kBAAM+M,GAAWvL,KAE1B,4EACA,yBAAK1B,IAAI,kCAEX,yBACE5B,UAAU,cACVoC,MAAO,CAAEC,QAASiB,EAAS,QAAU,SAErC,2BACEtD,UAAU,iBACVH,KAAK,OACL6K,YAAY,iCACZ5K,KAAK,WAEP,yBAAKE,UAAU,iCACb,yBAAKA,UAAU,kBAAf,4BACA,yBAAKA,UAAU,gBACb,2BACEA,UAAU,UACVH,KAAK,OACL6K,YAAY,wCACZ5K,KAAK,SAEP,2BACEE,UAAU,UACVH,KAAK,OACL6K,YAAY,uBACZ5K,KAAK,OACJ,MAGP,4BAAQE,UAAU,cAAcH,KAAK,UAArC,0DAGA,yBAAKG,UAAU,kCACb,yBAAKA,UAAU,kBAAf,oDACA,yBAAKA,UAAU,gBACZyP,EAAS9J,KAAI,SAACE,GAAD,OACZ,2BAAO7F,UAAU,SACf,2BAAOH,KAAK,WAAWC,KAAK,WAAWC,MAAM,iEAC7C,6FACa,IACX,yBAAK6B,IAAI,2BAA2B5B,UAAU,YAAa,UAMnE,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,kBAAf,kCACA,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACE+C,GAAG,gBACHjD,KAAK,YACL6P,SAAS,EACT5E,QAASf,EAAOrE,KAAI,SAACa,GAAD,MAAY,CAC9BwE,MAAM,GAAD,OAAKxE,EAAL,mCACLzG,MAAOyG,MAETkE,YAAY,4DCsDbkF,OArHf,WAA4B,IAAD,EACV3N,mBAAS,CAAC,IAAIwC,EAAO,IAAIA,IAAjCiB,EADkB,oBAEzB,OACE,yBAAK1F,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,2BACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,cAAf,mFACA,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CACEA,UAAU,iBACV0B,GAAG,mBACHU,MAAO,CAAEgD,gBAAiB,4BAE1B,yBAAKpF,UAAU,aACb,yBAAKA,UAAU,UAAU4B,IAAI,wBAAwBC,IAAI,MAE3D,yBAAKgO,OAAO,eAAZ,6CAEE,6BAFF,iEAMDnK,EAAKC,KAAI,SAACC,GAAD,OACR,yBAAK5F,UAAU,QACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,eAAeuD,KAAK,IAC/B,gGAEF,uBAAGvD,UAAU,cAAcuD,KAAK,KAC7BqC,EAAI5C,OAEP,yBAAKhD,UAAU,cAAc4F,EAAIE,aAElCF,EAAIkK,UACH,yBAAK9P,UAAU,cACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SAAf,4BACA,yBAAKA,UAAU,SAAS4F,EAAIlB,MAA5B,YAEF,uBACE1E,UAAU,eACVuD,KAAK,IACLnB,MAAO,CACLgD,gBAAgB,QAAD,OAAUQ,EAAImK,UAAUpL,KAAKU,WAA7B,SAIrB,yBAAKrF,UAAU,qBACb,uBACEA,UAAWA,EAAU,CACnB,SAAS,EACTgQ,mBAAmB,EACnBC,SAAmC,IAAzBrK,EAAIyJ,UAAUzI,SAE1BrD,KAAI,8BAAyBqC,EAAIsK,aAAatL,UAA1C,iBAA4DgB,EAAIsK,aAAarL,KAAKoC,QANxF,0CAaJ,yBAAKjH,UAAU,cACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SAAf,4BACA,yBAAKA,UAAU,SAAS4F,EAAIlB,MAA5B,YAEF,yBAAK1E,UAAU,iBACb,uBACEA,UAAU,WACVuD,KAAI,4BAAuBqC,EAAI7C,KAE/B,yBACE/C,UAAU,UACV4B,IAAI,gCACJC,IAAI,MAGR,0BAAM4B,OAAO,sBAAsBD,OAAO,QACxC,2BAAO3D,KAAK,SAASE,MAAO6F,EAAI7C,GAAIjD,KAAK,UACzC,kBAAC,EAAD,MACA,4BAAQE,UAAU,WAAWH,KAAK,UAChC,yBACEG,UAAU,UACV4B,IAAI,kCACJC,IAAI,SAMd,yBAAK7B,UAAU,qBACb,uBACEA,UAAU,0BACV8B,QAAS,kBAAM8D,EAAIyJ,UAAUzI,QAC7BrD,KAAI,kCAA6BqC,EAAI7C,KAHvC,iEAaZ,kBAAC,EAAD,WCvGGoN,G,2FAXX,OAAO,I,gCAGP,MAAO,mB,2BAIP,OAAO,IAAI3L,M,KC0EA4L,OA/Ef,WACQ,IAAAC,EAAU,CAAC,IAAIF,GAAU,IAAIA,IAA7B,EAC4BlO,mBAAS,IADrC,mBACHqO,EADG,KACUC,EADV,KAEN,OACE,yBAAKvQ,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,sBACb,2BACEA,UAAU,UACV+C,GAAG,SACHlD,KAAK,OACL6K,YAAY,iCACZ5K,KAAK,SACLyL,aAAa,MACbyB,QAAS,SAACvK,GACR8N,EAAe9N,EAAM8B,OAAOxE,WAIlC,0BAAMC,UAAU,0BACbqQ,EAAQ1K,KAAI,SAAC6K,GAAD,OACX,kBAAC,IAAD,CACE9O,GAAE,8BAAyB8O,EAAO5L,UAAhC,iBAAkD4L,EAAO3L,KAAKoC,QAEhE,yBACEjH,UAAU,eACVoC,MAAO,CACLC,SACGiO,EAAY1J,QACb,UAAG4J,EAAO3L,KAAK/E,KAAf,YAAuB0Q,EAAO3L,KAAKyB,SAAUmK,MAC3C,IAAIC,OAAOJ,EAAa,MAEtB,QACA,SAGR,yBACEtQ,UAAU,YACVoC,MAAO,CACLgD,gBAAgB,QAAD,OAAUoL,EAAO3L,KAAKQ,WAAtB,QAGnB,yBAAKrF,UAAU,cACb,yBAAKA,UAAU,cACZwQ,EAAO3L,KAAK/E,KADf,IACsB0Q,EAAO3L,KAAKyB,SAElC,yBACEtG,UAAU,aACV+C,GAAE,0BAAqByN,EAAO5L,cAGlC,yBACE5E,UAAU,eACV+C,GAAE,0BAAqByN,EAAO5L,aAEhC,yBACE5E,UAAU,gBACV+C,GAAE,sBAAiByN,EAAO5L,oBAOtC,yBAAK5E,UAAU,uBAIrB,4BAAQ4B,IAAI,oEACZ,4BAAQA,IAAI,sBCiCH+O,OA3Gf,WAAmC,IAAD,EACd1O,mBAAS,CAAC,IAAIwC,EAAO,IAAIA,IAApCmM,EADyB,oBAEhC,OACE,yBAAK5Q,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,2BACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,cAAf,sEACA,yBAAKA,UAAU,gBACb,uBACEA,UAAU,iBACVuD,KAAK,mBACLnB,MAAO,CAAEgD,gBAAiB,8BAE1B,yBAAKpF,UAAU,aACb,yBAAKA,UAAU,UAAU4B,IAAI,wBAAwBC,IAAI,MAE3D,yBAAK7B,UAAU,eAAf,6CAEE,6BAFF,iEAMD4Q,EAAQjL,KAAI,SAACC,GAAD,OACXA,EAAIiL,WACF,yBAAK7Q,UAAU,QACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,eAAeuD,KAAK,KAC/B,gGAEF,uBAAGvD,UAAU,cAAcuD,KAAK,KAC7BqC,EAAI5C,OAEP,yBAAKhD,UAAU,cAAc4F,EAAIE,aAEnC,yBAAK9F,UAAU,cACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SAAf,4BACA,yBAAKA,UAAU,SAAS4F,EAAImK,UAAUrL,MAAtC,YAEF,uBACE1E,UAAU,eACVuD,KAAK,IACLnB,MAAO,CACLgD,gBAAgB,QAAD,OAAUQ,EAAImK,UAAUpL,KAAKU,WAA7B,SAIrB,yBAAKrF,UAAU,qBACb,0BAAMyD,OAAO,0BAA0BD,OAAO,QAC5C,2BAAO3D,KAAK,SAASE,MAAO6F,EAAI7C,GAAIjD,KAAK,UACzC,kBAAC,EAAD,MACA,4BAAQE,UAAU,4BAAlB,0EAQR,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,eAAeuD,KAAK,IAC/B,mFAEF,uBAAGvD,UAAU,cAAcuD,KAAK,KAC7BqC,EAAI5C,OAEP,yBAAKhD,UAAU,cAAc4F,EAAIkL,aAEnC,yBAAK9Q,UAAU,cACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SAAf,4BACA,yBAAKA,UAAU,SAAS4F,EAAImK,UAAUrL,MAAtC,WAEF,uBACE1E,UAAU,eACVuD,KAAK,IACLnB,MAAO,CACLgD,gBAAgB,QAAD,OAAUQ,EAAImK,UAAUpL,KAAKU,WAA7B,SAIrB,yBAAKrF,UAAU,qBACb,uBACEA,UAAU,0BACVuD,KAAI,8BAAyBqC,EAAIsK,aAAatL,UAA1C,iBAA4DgB,EAAIsK,aAAarL,KAAKoC,QAFxF,oDCuBT8J,OA9Gf,WACE,IAAMC,EAAO,CAAC,IAAIvM,EAAO,IAAIA,GAC7B,OACE,yBAAKzE,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,2BACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,cAAf,sEACA,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CACEA,UAAU,iBACV0B,GAAG,mBACHU,MAAO,CACLgD,gBAAiB,8BAGnB,yBAAKpF,UAAU,aACb,yBAAKA,UAAU,UAAU4B,IAAI,wBAAwBC,IAAI,MAE3D,yBAAK7B,UAAU,eAAf,6CAEE,6BAFF,iEAMDgR,EAAKrL,KAAI,SAACC,GAAD,OACRA,EAAIiL,WACF,yBAAK7Q,UAAU,QACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,eAAeuD,KAAK,IAC/B,mFAEF,uBAAGvD,UAAU,cAAcuD,KAAK,KAC7BqC,EAAI5C,OAEP,yBAAKhD,UAAU,cAAc4F,EAAIE,aAEnC,yBAAK9F,UAAU,cACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SAAf,4BACA,yBAAKA,UAAU,SAAS4F,EAAImK,UAAUrL,MAAtC,WAEF,kBAAC,IAAD,CACE1E,UAAU,eACV0B,GAAE,uBAAkBkE,EAAIG,MAAMkB,OAC9B7E,MAAO,CACLgD,gBAAgB,OAAD,OAASQ,EAAIG,MAAMV,WAAnB,SAIrB,yBAAKrF,UAAU,qBACb,uBACEA,UAAU,0BACVuD,KAAI,8BAAyBqC,EAAIsK,aAAatL,UAA1C,iBAA4DgB,EAAIsK,aAAarL,KAAKoC,QAErF,IAJH,2CAWN,yBAAKjH,UAAU,QACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,eAAeuD,KAAK,KAC/B,gGAEF,uBAAGvD,UAAU,cAAcuD,KAAK,KAC7BqC,EAAI5C,OAEP,yBAAKhD,UAAU,cAAc4F,EAAIE,aAEnC,yBAAK9F,UAAU,cACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SAAf,+CACA,yBAAKA,UAAU,SAAS4F,EAAImK,UAAUrL,MAAtC,WAEF,kBAAC,IAAD,CACE1E,UAAU,eACV0B,GAAE,uBAAkBkE,EAAIG,MAAMkB,OAC9B7E,MAAO,CACLgD,gBAAgB,OAAD,OAASQ,EAAIG,MAAMV,WAAnB,SAIrB,yBAAKrF,UAAU,qBACb,0BAAMyD,OAAO,yBAAyBD,OAAO,QAC3C,2BAAO3D,KAAK,SAASE,MAAO6F,EAAI7C,GAAIjD,KAAK,UACzC,kBAAC,EAAD,MACA,4BAAQE,UAAU,4BAAlB,wEC7CXiR,OAlDf,WAA8B,IAAD,EACbhP,mBAAS,IAAIwC,GAApBmB,EADoB,oBAE3B,OACE,yBAAK5F,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,WAAW4F,EAAI5C,OAC7B,0BACEhD,UAAU,cACVyN,QAAQ,oCACRjK,OAAO,OACPC,OAAO,oBAEP,yBAAKzD,UAAU,gBACb,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,4BACA,yBAAKA,UAAU,kBACb,2BACEA,UAAU,UACVH,KAAK,OACL6K,YAAY,0DACZa,aAAa,MACbzL,KAAK,QACLsL,SAAS,aAPb,YAaJ,yBAAKpL,UAAU,gBACb,8BACEA,UAAU,aACVF,KAAK,UACL4K,YAAY,sHACZU,SAAS,cAGb,2BAAOvL,KAAK,SAASE,MAAO6F,EAAI7C,GAAIjD,KAAK,UACzC,kBAAC,EAAD,MACA,4BAAQE,UAAU,0BAA0BH,KAAK,UAAjD,kICsIGqR,OAzJf,WAAgB,IAAD,EACYjP,oBAAS,GADrB,uBAEeA,oBAAS,IAFxB,mBAEVkP,EAFU,KAEAC,EAFA,KAIb,OACE,yBAAKpR,UAAU,MAAMoC,MAAO,CAAEiP,SAAUF,EAAW,SAAW,SAC5D,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnM,KAAK,IAAIsM,OAAK,EAACC,UAAWxN,IACjC,kBAAC,IAAD,CAAOiB,KAAK,YAAYuM,UAAW9L,IACnC,kBAAC,IAAD,CAAOT,KAAK,kBAAkBsM,OAAK,EAACC,UAAWvL,IAC/C,kBAAC,IAAD,CAAOhB,KAAK,sBAAsBsM,OAAK,EAACC,UAAWvK,IACnD,kBAAC,IAAD,CAAOhC,KAAK,UAAUsM,OAAK,EAACC,UAAWxH,IACvC,kBAAC,IAAD,CAAO/E,KAAK,gBAAgBsM,OAAK,EAACC,UAAWjG,IAC7C,kBAAC,IAAD,CAAOtG,KAAK,cAAcsM,OAAK,EAACC,UAAWrF,IAC3C,kBAAC,IAAD,CAAOlH,KAAK,mBAAmBsM,OAAK,EAACC,UAAW9C,KAChD,kBAAC,IAAD,CAAOzJ,KAAK,mBAAmBsM,OAAK,EAACC,UAAWtC,KAChD,kBAAC,IAAD,CACEjK,KAAK,oBACLsM,OAAK,EACLC,UAAWnB,KAEb,kBAAC,IAAD,CACEpL,KAAK,yBACLsM,OAAK,EACLC,UAAWlD,KAEb,kBAAC,IAAD,CACErJ,KAAK,0BACLsM,OAAK,EACLC,UAAWnC,KAEb,kBAAC,IAAD,CAAOpK,KAAK,iBAAiBsM,OAAK,EAACC,UAAW3B,KAC9C,kBAAC,IAAD,CACE5K,KAAK,mBACLsM,OAAK,EACLC,UAAWZ,KAEb,kBAAC,IAAD,CAAO3L,KAAK,gBAAgBsM,OAAK,EAACC,UAAWR,KAC7C,kBAAC,IAAD,CAAO/L,KAAK,oBAAoBsM,OAAK,EAACC,UAAWN,KAEjD,kBAAC,IAAD,CAAOjM,KAAK,OAAOsM,OAAK,EAACC,UAAW3F,IACpC,kBAAC,IAAD,CAAO5G,KAAK,OAAOsM,OAAK,EAACC,UAAW1F,IACpC,kBAAC,IAAD,CAAO7G,KAAK,OAAOsM,OAAK,EAACC,UAAWzF,IAEpC,kBAAC,IAAD,CAAOyF,UAAW9F,MAItB,kBAAC,EAAD,CAAO3L,KAAK,SAASE,UAAU,gBAAgBgD,MAAM,sEACnD,0BACEhD,UAAU,cACVwD,OAAO,OACPC,OAAO,SACPV,GAAG,aAEH,kBAAC,EAAD,MACA,yBAAK/C,UAAU,eACb,yBAAKA,UAAU,gBAAf,kGACA,2BACEA,UAAU,eACVH,KAAK,OACLC,KAAK,QACLsL,SAAS,WACTV,YAAY,MAGhB,yBAAK1K,UAAU,eACb,yBAAKA,UAAU,gBAAf,wCACA,2BACEA,UAAU,eACVH,KAAK,WACLC,KAAK,WACLsL,SAAS,WACTV,YAAY,MAGhB,4BAAQ1K,UAAU,aAAaH,KAAK,UAApC,kCAGA,yBAAKG,UAAU,iBACb,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,cAAcuD,KAAK,YAC9B,yBAAK3B,IAAI,iCAEX,uBAAG5B,UAAU,cAAcuD,KAAK,gBAC9B,yBAAK3B,IAAI,wCAKjB,yBAAK5B,UAAU,qBACb,uBACEA,UAAU,8BACV8B,QAAS,kBAAMoB,EAAU,WAF3B,uEAMA,uBAAGlD,UAAU,kBAAkBuD,KAAK,WAApC,kHAKJ,kBAAC,EAAD,CACEzD,KAAK,QACLE,UAAU,gBACVgD,MAAM,6HAEN,0BACEhD,UAAU,cACVwD,OAAO,OACPC,OAAO,SACPV,GAAG,aAEH,kBAAC,EAAD,MACA,yBAAK/C,UAAU,eACb,yBAAKA,UAAU,gBAAf,+EACA,2BACEA,UAAU,eACVH,KAAK,QACLC,KAAK,QACLsL,SAAS,WACTV,YAAY,iFAGhB,yBAAK1K,UAAU,kBAAf,4VAGA,4BAAQA,UAAU,aAAaH,KAAK,UAApC,uEAIF,yBAAKG,UAAU,qBACb,uBACEA,UAAU,8BACV8B,QAAS,kBAAMoB,EAAU,YAF3B,kCAMA,uBAAGlD,UAAU,kBAAkBuD,KAAK,WAApC,kHAMJ,kBAAC,EAAD,CACEX,OAAQ,kBAAMwO,GAAY,IAC1B7O,QAAS,kBAAM6O,GAAY,QCjKfI,QACU,cAA5BC,OAAOC,SAASC,UAEc,UAA5BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlB,MACvB,2DCXNmB,IAASC,OAAO,kBAAC,GAAD,MAAS3E,SAAS4E,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1F,GACLqB,QAAQrB,MAAMA,EAAM4C,c","file":"static/js/main.5b7061b0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CSRF_TOKEN = \"csrf token here\";\n\nfunction CSRF() {\n  return <input type=\"hidden\" name=\"_csrf\" value={CSRF_TOKEN}></input>;\n}\n\nexport default CSRF;\n","const className = (classNames) =>\n  Object.keys(classNames)\n    .filter((key) => classNames[key])\n    .join(\" \");\n\nconst forceNumericOnly = (e) => {\n  let key = e.charCode || e.keyCode || 0;\n  // allow backspace, tab, delete, enter, arrows, numbers and keypad numbers ONLY\n  // home, end, period, and numpad decimal\n  return (\n    key === 8 ||\n    key === 9 ||\n    key === 13 ||\n    key === 46 ||\n    key === 110 ||\n    key === 190 ||\n    (key >= 35 && key <= 40) ||\n    (key >= 48 && key <= 57) ||\n    (key >= 96 && key <= 105)\n  );\n};\n\nexport { className, forceNumericOnly };\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction search(object) {\n  return \"?\" + new URLSearchParams(object).toString();\n}\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction Pagination() {\n  const query = useQuery(),\n    currentPage = parseInt(query.get(\"page\") || 1),\n    lastPage = 33,\n    hasPreviousPage = currentPage > 1,\n    hasNextPage = currentPage < lastPage,\n    hasPrePreviousPage = currentPage > 2,\n    hasPostNextPage = currentPage < lastPage - 1;\n  return (\n    <div className=\"t-pagination\">\n      {hasPreviousPage ? (\n        <Link\n          to={{ search: search({ page: currentPage - 1 }) }}\n          className=\"prev\"\n        >\n          <img className=\"img-svg\" src=\"/images/icons/pagination.svg\" alt=\"\" />\n        </Link>\n      ) : (\n        <a className=\"prev\" onClick={() => false}>\n          <img className=\"img-svg\" src=\"/images/icons/pagination.svg\" alt=\"\" />\n        </a>\n      )}\n      {hasPreviousPage ? (\n        <Link className=\"app-page\" to={{ search: search({ page: 1 }) }}>\n          1\n        </Link>\n      ) : (\n        \"\"\n      )}\n      {hasPrePreviousPage ? (\n        <Link\n          className=\"app-page\"\n          to={{ search: search({ page: currentPage - 1 }) }}\n        >\n          {currentPage - 1}\n        </Link>\n      ) : (\n        \"\"\n      )}\n      <Link\n        className=\"app-page active\"\n        to={{ search: search({ page: currentPage }) }}\n      >\n        {currentPage}\n      </Link>\n      {hasPostNextPage ? (\n        <Link\n          className=\"app-page\"\n          to={{ search: search({ page: currentPage + 1 }) }}\n        >\n          {currentPage + 1}\n        </Link>\n      ) : (\n        \"\"\n      )}\n      {hasNextPage ? (\n        <Link className=\"app-page\" to={{ search: search({ page: lastPage }) }}>\n          {lastPage}\n        </Link>\n      ) : (\n        \"\"\n      )}\n      {hasNextPage ? (\n        <Link\n          className=\"next\"\n          to={{ search: search({ page: currentPage + 1 }) }}\n        >\n          <img className=\"img-svg\" src=\"/images/icons/pagination.svg\" alt=\"\" />\n        </Link>\n      ) : (\n        <a className=\"next\" onClick={() => false}>\n          <img className=\"img-svg\" src=\"/images/icons/pagination.svg\" alt=\"\" />\n        </a>\n      )}\n    </div>\n  );\n}\n\nexport default Pagination;\n","import React, { useState } from \"react\";\nimport useBus, { dispatch } from \"use-bus\";\nimport useEventListener from \"@use-it/event-listener\";\nimport PropTypes from \"prop-types\";\nimport Pagination from \"./Pagination\";\nimport { closeMenu } from \"./Menu\";\n\nfunction Modal(props) {\n  const [open, setOpen] = useState(false),\n    style = {\n      display: open ? \"block\" : \"none\",\n    };\n\n  function openModal() {\n    setOpen(true);\n    if (props.onOpen) {\n      props.onOpen();\n    }\n  }\n\n  function closeModal() {\n    setOpen(false);\n    if (props.onClose) {\n      props.onClose();\n    }\n  }\n\n  // Subscribe to modal open events\n  useBus(\"MODAL_MUST_OPEN\", (event) => {\n    if (event.payload.modalName === props.name) {\n      openModal();\n    }\n  });\n\n  // Subscribe to modal close events\n  useBus(\"MODALS_MUST_CLOSE\", () => closeModal());\n\n  // Subscribe to keyboard-driven close events\n  useEventListener(\"keydown\", (event) => {\n    if (event.keyCode === 27) {\n      event.stopPropagation();\n      closeModal();\n    }\n  });\n\n  return (\n    <div className=\"modal__outer\">\n      <div className=\"overlay\" onClick={() => closeModal()} style={style}></div>\n      <div\n        className={`modal ${props.className}`}\n        id={`${props.name}Modal`}\n        style={style}\n      >\n        <div className=\"modal__close\" onClick={() => closeModal()}>\n          <img className=\"img-svg\" src=\"/images/icons/close.svg\" alt=\"\" />\n        </div>\n        <div className=\"modal__title\">{props.title}</div>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  name: PropTypes.string,\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n};\n\nexport default Modal;\nexport function openModal(modalName) {\n  dispatch({ type: \"MODALS_MUST_CLOSE\" });\n  closeMenu();\n  dispatch({ type: \"MODAL_MUST_OPEN\", payload: { modalName } });\n}\n","import React, { useState } from \"react\";\nimport CSRF from \"./CSRF\";\nimport useBus, { dispatch } from \"use-bus\";\nimport { className } from \"../utils\";\nimport { openModal } from \"./Modal\";\n\nfunction AuthenticatedMenu(props) {\n  return (\n    <div\n      id=\"menu\"\n      className={className({ active: props.open })}\n      style={props.style}\n    >\n      <div id=\"menu__close\" onClick={closeMenu}>\n        <img className=\"img-svg\" src=\"/images/icons/close.svg\" alt=\"\" />\n      </div>\n      <div className=\"menu__list\">\n        <a className=\"menu__link active\" href=\"/all-jobs\" onClick={closeMenu}>\n          Все объявления\n        </a>\n        <a className=\"menu__link\" href=\"/profile/jobs\" onClick={closeMenu}>\n          Мои объявления\n        </a>\n        <a className=\"menu__link\" href=\"/profile/pending\" onClick={closeMenu}>\n          Выполняются\n        </a>\n        <a className=\"menu__link\" href=\"/profile/messages\" onClick={closeMenu}>\n          Диалоги\n        </a>\n      </div>\n      <form method=\"POST\" action=\"/logout\">\n        <CSRF />\n        <button type=\"submit\">Выйти из аккаунта</button>\n      </form>\n    </div>\n  );\n}\n\nfunction NotAuthenticatedMenu(props) {\n  return (\n    <div\n      className={className({ menu_unregistered: true, active: props.open })}\n      id=\"menu\"\n      style={props.style}\n    >\n      <div id=\"menu__close\" onClick={closeMenu}>\n        <img className=\"img-svg\" src=\"/images/icons/close.svg\" alt=\"\" />\n      </div>\n      <a className=\"logo\" href=\"#\">\n        tutoria\n      </a>\n      <div className=\"menu__list\">\n        <a className=\"menu__link\" href=\"/all-jobs\" onClick={closeMenu}>\n          Все объявления\n        </a>\n      </div>\n      <div className=\"modal__open\" onClick={() => openModal(\"signin\")}>\n        Войти\n      </div>\n    </div>\n  );\n}\n\nfunction Menu(props) {\n  const [isAuthenticated] = useState(true),\n    [open, setOpen] = useState(false),\n    style = { display: open ? \"block\" : \"none\" },\n    openMenu = () => {\n      setOpen(true);\n      if (props.onOpen) {\n        props.onOpen();\n      }\n    },\n    closeMenu = () => {\n      setOpen(false);\n      if (props.onClose) {\n        props.onClose();\n      }\n    };\n\n  useBus(\"MENU_MUST_OPEN\", openMenu);\n  useBus(\"MENU_MUST_CLOSE\", closeMenu);\n\n  return isAuthenticated ? (\n    <AuthenticatedMenu open={open} style={style} />\n  ) : (\n    <NotAuthenticatedMenu open={open} style={style} />\n  );\n}\n\nexport default Menu;\nexport function openMenu() {\n  dispatch(\"MENU_MUST_OPEN\");\n}\nexport function closeMenu() {\n  dispatch(\"MENU_MUST_CLOSE\");\n}\n","import React, { useState } from \"react\";\nimport \"../../scss/style__landing.scoped.scss\";\nimport { Link } from \"react-router-dom\";\nimport { openMenu, closeMenu } from \"../Menu\";\nimport { className } from \"../../utils\";\n\nfunction LandingPage() {\n  const [betaVersionInfoOpen, setBetaVersionInfoOpen] = useState(false),\n    [betaTestersInfoOpen, setBetaTestersInfoOpen] = useState(false);\n  return (\n    <div className=\"app-page\">\n      <header id=\"header\">\n        <div className=\"container header__cont\">\n          <div className=\"header__logo\">\n            <a className=\"logo\" href=\"#\">\n              tutoria\n            </a>\n          </div>\n          <div className=\"header__navigation\">\n            <div className=\"navigation__menu anchor__menu\">\n              <a className=\"menu__link\" href=\"#about-section\">\n                Как это работает?\n              </a>\n              <a className=\"menu__link\" href=\"#advantages-section\">\n                Почему мы?\n              </a>\n              <a className=\"menu__link\" href=\"#beta-section\">\n                Бета версия\n              </a>\n            </div>\n          </div>\n          <div className=\"header__signup\">\n            <a className=\"signup__btn t-btn default\" href=\"/signup\">\n              Регистрация\n            </a>\n          </div>\n          <div className=\"header__mobile\" id=\"menu__open\" onClick={openMenu}>\n            <img className=\"img-svg\" src=\"/images/icons/menu.svg\" alt=\"\" />\n          </div>\n        </div>\n      </header>\n\n      <section id=\"intro-section\">\n        <div className=\"container\">\n          <h1 className=\"t-title\">\n            Делись своими знаниями <br />и зарабатывай на этом\n          </h1>\n          <h3 className=\"t-subtitle\">\n            Помогай другим с домашним заданием <br />и получай за это\n            вознаграждения\n          </h3>\n          <Link to=\"/all-jobs\" className=\"intro__btn t-btn blue\">\n            Начать\n          </Link>\n          <img\n            className=\"intro__img\"\n            src=\"/images/landing/broweser.png\"\n            alt=\"\"\n          />\n        </div>\n      </section>\n      <section className=\"two-section\" id=\"about-section\">\n        <div className=\"container\">\n          <h1 className=\"t-title about__title\">Как это работает?</h1>\n          <div className=\"about__box left\">\n            <img\n              className=\"about__img\"\n              src=\"/images/landing/about1.png\"\n              alt=\"\"\n            />\n            <div className=\"about__text\">\n              <div className=\"icon\">1</div>\n              <div className=\"t-title\">Найти задачу на сайте</div>\n              <div className=\"t-subtitle\">\n                Пользователь создаёт объявление на сайте\n              </div>\n\n              <Link to=\"/all-jobs\" className=\"t-btn blue\">\n                Начать\n              </Link>\n            </div>\n          </div>\n          <div className=\"about__box right\">\n            <div className=\"about__text\">\n              <div className=\"icon\">2</div>\n              <div className=\"t-title\">Реши её</div>\n              <div className=\"t-subtitle\">\n                Ты решаешь его задачу и объясняешь <br />\n                ему ход своих мыслей\n              </div>\n            </div>\n            <img\n              className=\"about__img\"\n              src=\"/images/landing/about2.png\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"about__box left\">\n            <img\n              className=\"about__img\"\n              src=\"/images/landing/about3.png\"\n              alt=\"\"\n            />\n            <div className=\"about__text\">\n              <div className=\"icon\">3</div>\n              <div className=\"t-title\">Получи вознаграждение!</div>\n              <div className=\"t-subtitle\">\n                Монетки, которые ты получил за выполнение <br />\n                задачи, можешь отдать на решение\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"two-section\" id=\"advantages-section\">\n        <div className=\"container\">\n          <div className=\"t-title advantages__title\">Наши премущества</div>\n          <div className=\"t-subtitle advantages__subtitle\">\n            Каждый день мы стараемся добавлять в Tutoria новый функционал,{\" \"}\n            <br />\n            который сделает обучение проще и приятнее для каждого\n          </div>\n          <div className=\"about__box right\">\n            <div className=\"about__text\">\n              <div className=\"icon\">\n                <img src=\"/images/icons/user.png\" alt=\"\" />\n              </div>\n              <div className=\"t-title\">Рейтинговая система</div>\n              <div className=\"t-subtitle\">\n                Поработав с исполнителем, <br />\n                вы можете оставить о нем отзыв\n              </div>\n            </div>\n            <img\n              className=\"about__img\"\n              src=\"/images/landing/advantages1.png\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"about__box left\">\n            <img\n              className=\"about__img\"\n              src=\"/images/landing/advantages2.png\"\n              alt=\"\"\n            />\n            <div className=\"about__text\">\n              <div className=\"icon\">\n                <img src=\"/images/icons/msg.png\" alt=\"\" />\n              </div>\n              <div className=\"t-title\">Удобный мессенджер</div>\n              <div className=\"t-subtitle\">\n                Для вашего удобства на сайте встроенный мессенджер\n              </div>\n            </div>\n          </div>\n          <div className=\"about__box right\">\n            <div className=\"about__text\">\n              <div className=\"icon\">\n                {\" \"}\n                <img src=\"/images/icons/money.png\" alt=\"\" />\n              </div>\n              <div className=\"t-title\">Нет комиссиям!</div>\n              <div className=\"t-subtitle\">\n                Внутри системы, монетками можно <br />\n                обмениваться без комиссий\n              </div>\n            </div>\n            <img\n              className=\"about__img\"\n              src=\"/images/landing/advantages3.png\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n      </section>\n      <section id=\"beta-section\">\n        <div className=\"container\">\n          <div className=\"t-title beta__title\">Бета версия</div>\n          <div className=\"t-subtitle beta__subtitle\">\n            На данный момент проект находится в стадии разработке, <br />\n            но вы можете помочь нам завершить его быстрее\n          </div>\n          <div\n            className={className({\n              beta__item: true,\n              active: betaVersionInfoOpen,\n            })}\n          >\n            <div\n              className=\"item__open item__nav\"\n              onClick={() => setBetaVersionInfoOpen(true)}\n            >\n              <img className=\"img-svg\" src=\"/images/icons/plus.svg\" alt=\"\" />\n            </div>\n            <div\n              className=\"item__close item__nav\"\n              onClick={() => setBetaVersionInfoOpen(false)}\n            >\n              <img className=\"img-svg\" src=\"/images/icons/beta.svg\" alt=\"\" />\n            </div>\n            <div className=\"item__title t-title\">Стать бета-тестером</div>\n            <div\n              className=\"item__content\"\n              style={{ display: betaVersionInfoOpen ? \"block\" : \"none\" }}\n            >\n              <div className=\"item__subtitle t-subtitle\">\n                Бета версия сайта всегда доступна по ссылке. Пользуйтесь ею и\n                сообщайте <br />о возможных ошибках или Ваших пожеланиях. Мы\n                рады каждому отзыву!\n              </div>\n              <a\n                className=\"t-btn blue\"\n                href=\"/all-jobs\"\n                style={{\n                  opacity: betaVersionInfoOpen ? 1 : 0,\n                  pointerEvents: betaVersionInfoOpen ? \"all\" : \"none\",\n                }}\n              >\n                Попробовать\n              </a>\n            </div>\n          </div>\n          <div\n            className={className({\n              beta__item: true,\n              active: betaTestersInfoOpen,\n            })}\n          >\n            <div\n              className=\"item__open item__nav\"\n              onClick={() => setBetaTestersInfoOpen(true)}\n            >\n              <img className=\"img-svg\" src=\"/images/icons/plus.svg\" alt=\"\" />\n            </div>\n            <div\n              className=\"item__close item__nav\"\n              onClick={() => setBetaTestersInfoOpen(false)}\n            >\n              <img className=\"img-svg\" src=\"/images/icons/beta.svg\" alt=\"\" />\n            </div>\n            <div className=\"item__title t-title\">Помочь нам с разработкой</div>\n            <div\n              className=\"item__content\"\n              style={{ display: betaTestersInfoOpen ? \"block\" : \"none\" }}\n            >\n              <div className=\"item__subtitle t-subtitle\">\n                Проекту срочно требуется Front End разработчики. <br />\n                Также нужны люди для Back End (сейчас платформа написана на\n                node.js). <br />\n                <br />\n                <br />\n                Если Вы готовы присоединиться, пожалуйста, напишите нам. <br />\n                Мы рады любым кандидатурам\n              </div>\n              <a\n                className=\"t-btn blue\"\n                href=\"https://vk.com/tutoriaapp\"\n                style={{\n                  opacity: betaTestersInfoOpen ? 1 : 0,\n                  pointerEvents: betaTestersInfoOpen ? \"all\" : \"none\",\n                }}\n              >\n                Написать\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n      <footer id=\"footer\">\n        <div className=\"footer__main\">\n          <div className=\"container\">\n            <div className=\"btn-box\">\n              <a className=\"t-btn blue\" href=\"/all-jobs\">\n                Присоединяйся\n              </a>\n              <img\n                className=\"footer__img\"\n                src=\"/images/landing/footer.png\"\n                alt=\"\"\n              />\n              <img\n                className=\"footer__img xs\"\n                src=\"/images/landing/footer__xs.png\"\n                alt=\"\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer__info\">\n          <div className=\"container\">\n            <span className=\"info__link copy\">\n              © 2020 Tutoria. All rights reserved\n            </span>\n            <a className=\"info__link\" href=\"mailto:support@tutoria.app\">\n              support@tutoria.app\n            </a>\n            <div className=\"info__social\">\n              <a\n                className=\"info__instagram\"\n                href=\"https://instagram.com/tutoria.app\"\n                target=\"_blank\"\n              >\n                <img src=\"/images/icons/social/instagram.png\" alt=\"\" />\n              </a>\n              <a\n                className=\"info__vk\"\n                href=\"https://vk.com/tutoriaapp\"\n                target=\"_blank\"\n              >\n                <img src=\"/images/icons/social/vk.png\" alt=\"\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </footer>\n      <div className=\"overlay\"></div>\n      <div id=\"menu\">\n        <div id=\"menu__close\" onClick={closeMenu}>\n          <img className=\"img-svg\" src=\"/images/icons/close.svg\" alt=\"\" />\n        </div>\n        <div className=\"menu__list\">\n          <a className=\"menu__link\" href=\"#about-section\" onClick={closeMenu}>\n            Как это работает?\n          </a>\n          <a\n            className=\"menu__link\"\n            href=\"#advantages-section\"\n            onClick={closeMenu}\n          >\n            Почему мы?\n          </a>\n          <a className=\"menu__link\" href=\"#beta-section\" onClick={closeMenu}>\n            Бета версия\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","/**\n * User - модель Пользователь\n */\n\nimport Review from \"./Review\";\n\nclass User {\n  get id() {\n    return 1; // Actual id of the user\n  }\n\n  get email() {\n    return \"johndoe@example.com\";\n  }\n\n  get login() {\n    return \"johndoe\";\n  }\n\n  get name() {\n    return \"John\";\n  }\n\n  get surname() {\n    return \"Doe\";\n  }\n\n  get grade() {\n    return 11;\n  }\n\n  get school() {\n    return \"Гимназия 2 Красногорск\";\n  }\n\n  get reviews() {\n    return [new Review()];\n  }\n\n  get timeString() {\n    return \"\";\n  }\n\n  get age() {\n    return 25;\n  }\n\n  get profilePic() {\n    return \"images/user.png\"; // Actual profile pic\n  }\n\n  get reviews() {\n    return [];\n  }\n\n  get isWorker() {\n    return true;\n  }\n\n  get rating() {\n    return 5;\n  }\n\n  get jobCountString() {\n    return 100;\n  }\n}\n\nexport default User;\n","/**\n * Job - модель Работа\n */\nimport User from \"./User\";\n\nclass Job {\n  get id() {\n    return 100;\n  }\n\n  get owner() {\n    return new User();\n  }\n\n  get title() {\n    return \"Job title\";\n  }\n\n  get subject() {\n    return \"Job subject\";\n  }\n\n  get price() {\n    return 200;\n  }\n\n  get files() {\n    return [];\n  }\n\n  get proposals() {\n    return [];\n  }\n\n  get executant() {\n    return {\n      price: 150,\n      user: new User(),\n    };\n  }\n\n  get conversation() {\n    return {\n      twilioSID: 1010,\n      peer: new User(),\n    };\n  }\n}\n\nexport default Job;\n","import React, { useState } from \"react\";\nimport CSRF from \"./CSRF\";\nimport User from \"../models/User\";\nimport { className } from \"../utils\";\nimport { useLocation } from \"react-router-dom\";\nimport { openMenu } from \"./Menu\";\nimport { openModal } from \"./Modal\";\n\nfunction AuthenticatedHeader() {\n  const [currentUser] = useState(new User()),\n    path = useLocation().pathname;\n  return (\n    <header className=\"header\" id=\"header\">\n      <div className=\"container header__cont\">\n        <div className=\"header__logo\">\n          <a className=\"logo\" href=\"/\">\n            tutoria\n          </a>\n        </div>\n        <div className=\"header__navigation\">\n          <div className=\"navigation__add\">\n            <a href=\"/profile/add-job\">\n              <img src=\"/images/icons/add.svg\" />\n            </a>\n          </div>\n          <div className=\"navigation__menu\">\n            <a\n              className={className({\n                menu__link: true,\n                active: path === \"/all-jobs\",\n              })}\n              href=\"/all-jobs\"\n            >\n              Все объявления\n            </a>\n            <a\n              className={className({\n                menu__link: true,\n                active: path === \"/profile/jobs\",\n              })}\n              href=\"/profile/jobs\"\n            >\n              Мои объявления\n            </a>\n            <a\n              className={className({\n                menu__link: true,\n                active: path === \"/profile/pending\",\n              })}\n              href=\"/profile/pending\"\n            >\n              Выполняются\n            </a>\n            {currentUser.isWorker ? (\n              <a\n                className={className({\n                  menu__link: true,\n                  active: path === \"/profile/todo\",\n                })}\n                href=\"/profile/todo\"\n              >\n                Для меня\n              </a>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n        <a className=\"header__message\" href=\"/profile/messages\">\n          <img className=\"img-svg\" src=\"/images/messaging.svg\" alt=\"\" />\n        </a>\n        <div className=\"header__user\">\n          <a\n            className=\"user__link\"\n            href=\"/profile/me\"\n            style={{ backgroundImage: `url(/${currentUser.profilePic})` }}\n          ></a>\n          <form className=\"user__logout-form\" method=\"POST\" action=\"/logout\">\n            <CSRF />\n            <button className=\"user__logout\" type=\"submit\">\n              <img className=\"img-svg\" src=\"/images/icons/close.svg\" alt=\"\" />\n            </button>\n          </form>\n        </div>\n        <div className=\"header__mobile\" id=\"menu__open\" onClick={openMenu}>\n          <img className=\"img-svg\" src=\"/images/icons/menu.svg\" alt=\"\" />\n        </div>\n      </div>\n    </header>\n  );\n}\n\nfunction NotAuthenticatedHeader() {\n  return (\n    <header className=\"header unregistered\" id=\"header\">\n      <div className=\"container header__cont\">\n        <div className=\"header__logo\">\n          <a className=\"logo\" href=\"/\">\n            tutoria\n          </a>\n        </div>\n\n        <a\n          className=\"t-btn default header__mobile-user modal__open\"\n          onClick={() => openModal(\"signin\")}\n        >\n          <img src=\"/images/icons/header__user.png\" alt=\"\" />\n        </a>\n        <div className=\"header__navigation\">\n          <div className=\"navigation__menu\">\n            <a className=\"menu__link active\" href=\"/all-jobs\">\n              Все объявления\n            </a>\n          </div>\n        </div>\n        <button\n          onClick={() => openModal(\"signin\")}\n          className=\"t-btn default header__signin modal__open\"\n        >\n          Войти\n        </button>\n        <a className=\"t-btn transparent__blue header__signup\" href=\"/signup\">\n          Регистрация\n        </a>\n        <div className=\"header__mobile\" id=\"menu__open\" onClick={openMenu}>\n          <img className=\"img-svg\" src=\"/images/icons/menu.png\" alt=\"\" />\n        </div>\n      </div>\n    </header>\n  );\n}\n\nfunction Header() {\n  const [isAuthenticated] = useState(true);\n  return isAuthenticated ? <AuthenticatedHeader /> : <NotAuthenticatedHeader />;\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer id=\"footer\">\n      <div className=\"footer__main\">\n        <div className=\"container\">\n          <div className=\"btn-box\">\n            <a className=\"t-btn blue\" href=\"/all-jobs\">\n              Присоединяйся\n            </a>\n            <img className=\"footer__img\" src=\"/images/landing/footer.png\" alt=\"\" />\n            <img\n              className=\"footer__img xs\"\n              src=\"/images/landing/footer__xs.png\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"footer__info\">\n        <div className=\"container\">\n          <span className=\"info__link copy\">\n            © 2020 Tutoria. All rights reserved\n          </span>\n          <a className=\"info__link\" href=\"mailto:support@tutoria.app\">\n            support@tutoria.app\n          </a>\n          <div className=\"info__social\">\n            <a\n              className=\"info__instagram\"\n              href=\"https://instagram.com/tutoria.app\"\n              target=\"_blank\"\n            >\n              <img src=\"/images/icons/social/instagram.png\" alt=\"\" />\n            </a>\n            <a\n              className=\"info__vk\"\n              href=\"https://vk.com/tutoriaapp\"\n              target=\"_blank\"\n            >\n              <img src=\"/images/icons/social/vk.png\" alt=\"\" />\n            </a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Job from \"../../models/Job\";\nimport Header from \"../Header\";\nimport Pagination from \"../Pagination\";\nimport Footer from \"../Footer\";\n\nfunction AllJobsPage() {\n  const [jobs] = useState([new Job()]);\n\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <div className=\"catalog\">\n        <div className=\"container catalog__cont\">\n          <div className=\"catalog__content\">\n            <div className=\"t-title\">Все объявления</div>\n            <div className=\"content__box\">\n              {jobs.map((job) => (\n                <Link\n                  key={job.id}\n                  className=\"item\"\n                  to={`/job-detail/${job.id}`}\n                >\n                  <div className=\"item__head\">\n                    <div className=\"thing single\">\n                      <span>{job.subject}</span>\n                    </div>\n                    <div className=\"item__title\">{job.title}</div>\n                    <div className=\"item__date\">{job.timeString}</div>\n                  </div>\n                  <div className=\"item__foot\">\n                    <div\n                      className=\"item__author\"\n                      style={{\n                        backgroundImage: `url(/${job.owner.profilePic})`,\n                      }}\n                    ></div>\n                    <div className=\"item__price\">{job.price}&#x20bd;</div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n            <Pagination />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default AllJobsPage;\n","import React, { useState } from \"react\";\nimport Job from \"../../models/Job\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport Header from \"../Header\";\n\nfunction JobDetailPage() {\n  const urlParams = useParams(),\n    [job, setJob] = useState(new Job(urlParams.id)),\n    history = useHistory();\n\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <div className=\"post\">\n        <div className=\"container post__cont\">\n          <div className=\"post__left\">\n            <div className=\"t-title\">{job.title}</div>\n            <div className=\"post__info\">\n              <div className=\"post__date\">Вчера</div>\n              <a className=\"thing single\" href=\"#\">\n                <span>Математика</span>\n              </a>\n              <div className=\"post__price\">{job.price}&#x20bd;</div>\n            </div>\n            <div className=\"post__main\">\n              <div\n                className=\"main__author\"\n                id=\"authorInfo\"\n                onClick={() => history.push(`/user-detail/${job.owner.id}`)}\n              >\n                <div\n                  className=\"author__img\"\n                  style={{\n                    backgroundImage: `url(/${job.owner.profilePic}`,\n                  }}\n                ></div>\n                <div className=\"author__info\">\n                  <div className=\"author__name\">\n                    {job.owner.surname} {job.owner.name}\n                  </div>\n                  <div className=\"author__nickname\">\n                    {\" \"}\n                    {job.owner.linkReference}{\" \"}\n                  </div>\n                </div>\n              </div>\n              <div className=\"main__content\">\n                <div className=\"main__line\">\n                  <div className=\"title\">Класс</div>\n                  <div className=\"text\">{job.grade} Класс</div>\n                </div>\n                <div className=\"main__line\">\n                  <div className=\"title\">Описание</div>\n                  <div className=\"text\">{job.description}</div>\n                </div>\n                <div className=\"main__line\">\n                  <div className=\"title\">Сроки</div>\n                  <div className=\"text\">до {job.deadlineString}</div>\n                </div>\n                <div className=\"main__line\">\n                  <div className=\"title\">Документы</div>\n                  <div className=\"text\">\n                    {job.files.length ? (\n                      <div className=\"download__items\">\n                        {job.files.map((file) => (\n                          <Link\n                            className=\"item download\"\n                            to={`/${file.downloadLink}`}\n                          >\n                            <div className=\"format\">\n                              <span className=\"format__name\">\n                                {file.format}\n                              </span>\n                              <img\n                                className=\"img-svg format__icon\"\n                                src=\"/images/icons/format.svg\"\n                                alt=\"\"\n                              />\n                            </div>\n                            <div className=\"name\">{file.name}</div>\n                          </Link>\n                        ))}\n                      </div>\n                    ) : (\n                      <div className=\"text\">Нет документов</div>\n                    )}\n                  </div>\n                </div>\n                {/*<% if (canTry) { }\n                          <a className=\"t-btn transparent__blue\" href=\"/profile/try-job/{job._id}\">Выполнить работу</a>\n                                      <% } }*/}\n              </div>\n            </div>\n          </div>\n          {false ? (\n            <div className=\"post__right\">\n              <div className=\"t-title\">\n                Другое\n                <br />\n                из математики\n              </div>\n              <div className=\"rigth__box\">\n                <a className=\"item\" href=\"#\">\n                  <div className=\"item__head\">\n                    <div className=\"thing single\">\n                      <span>Математика</span>\n                    </div>\n                    <div className=\"item__title\">\n                      Двойной интеграл контрпример\n                    </div>\n                    <div className=\"item__date\">30 минут назад</div>\n                  </div>\n                  <div className=\"item__foot\">\n                    <div\n                      className=\"item__author\"\n                      style={{\n                        backgroundImage: `url(/images/user.png)`,\n                      }}\n                    ></div>\n                    <div className=\"item__price\">480₽</div>\n                  </div>\n                </a>\n\n                <a className=\"item\" href=\"#\">\n                  <div className=\"item__head\">\n                    <div className=\"thing single\">\n                      <span>Математика</span>\n                    </div>\n                    <div className=\"item__title\">\n                      Двойной интеграл контрпример\n                    </div>\n                    <div className=\"item__date\">30 минут назад</div>\n                  </div>\n                  <div className=\"item__foot\">\n                    <div\n                      className=\"item__author\"\n                      style={{\n                        backgroundImage: `url(/images/user.png)`,\n                      }}\n                    ></div>\n                    <div className=\"item__price\">480₽</div>\n                  </div>\n                </a>\n\n                <a className=\"item\" href=\"#\">\n                  <div className=\"item__head\">\n                    <div className=\"thing single\">\n                      <span>Математика</span>\n                    </div>\n                    <div className=\"item__title\">\n                      Двойной интеграл контрпример\n                    </div>\n                    <div className=\"item__date\">30 минут назад</div>\n                  </div>\n                  <div className=\"item__foot\">\n                    <div\n                      className=\"item__author\"\n                      style={{\n                        backgroundImage: `url(/images/user.png)`,\n                      }}\n                    ></div>\n                    <div className=\"item__price\">480₽</div>\n                  </div>\n                </a>\n              </div>\n              <a className=\"load__more t-btn default\" href=\"#\">\n                Показать еще\n              </a>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n      {/* Footer */}\n      {/* Navigation */}\n    </div>\n  );\n}\nexport default JobDetailPage;\n","import React, { useState } from \"react\";\nimport User from \"../../models/User\";\nimport CSRF from \"../CSRF\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"../Header\";\n\nfunction UserDetailPage() {\n  const urlParams = useParams(),\n    [user] = useState(new User(urlParams.login)),\n    [isAuthenticated] = useState(false);\n  return (\n    <div className=\"app-app-page\">\n      <Header />\n      <div className=\"user\">\n        <div className=\"container user__cont\">\n          <div className=\"user__left\">\n            <div className=\"user__head\">\n              <div\n                className=\"head__img\"\n                style={{\n                  backgroundImage: `url(/${user.profilePic})`,\n                }}\n              ></div>\n              <div className=\"head__info\">\n                <div className=\"user__name\">\n                  {user.name} {user.surname}\n                </div>\n                <div className=\"user__nickname\">{user.login}</div>\n              </div>\n            </div>\n            <div className=\"user__info\">\n              <div className=\"info__label\">\n                <div className=\"info__label\">Контакты:</div>\n                <div className=\"info__value\">{user.email}</div>\n              </div>\n              <div className=\"info__label\">\n                <div className=\"info__label\">Возраст:</div>\n                <div className=\"info__value\">{user.age} лет</div>\n              </div>\n              <div className=\"info__label\">\n                <div className=\"info__label\">В tutoria:</div>\n                <div className=\"info__value\">{user.timeString}</div>\n              </div>\n            </div>\n            {isAuthenticated ? (\n              <form method=\"POST\" action=\"/profile/send-message\">\n                <input type=\"hidden\" name=\"peer\" value={user.login} />\n                <CSRF />\n                <button type=\"submit\" className=\"t-btn blue\">\n                  Написать сообщение\n                </button>\n              </form>\n            ) : (\n              \"\"\n            )}\n          </div>\n          {user.reviews.length ? (\n            <div className=\"user__right absolute\">\n              <div className=\"right__title\">\n                Личный рейтинг\n                <br />и отзывы\n              </div>\n              <div className=\"right__subtitle\">\n                {user.rating} / 5 — {user.jobCountString}\n              </div>\n              <div className=\"user__reviews\">\n                <div className=\"reviews__box\">\n                  {user.reviews.map((review) => (\n                    <div className=\"review\">\n                      <div className=\"rating-area\">\n                        {[5, 4, 3, 2, 1].map((rating) => (\n                          <label\n                            for={`1star-${rating}`}\n                            title={`Оценка «${rating}»`}\n                          >\n                            <input\n                              type=\"radio\"\n                              id={`1star-${rating}`}\n                              name=\"1rating\"\n                              value={rating}\n                              checked={review.rating===rating}\n                            />\n                          </label>\n                        ))}\n                      </div>\n                      <div className=\"review__text\">{review.body}</div>\n                      <div className=\"review__author\">\n                        {review.author.name} {review.author.surname}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              {/* Pagination */}\n            </div>\n          ) : (\n            <div className=\"user__right\">\n              {user.isWorker ? (\n                <div className=\"right__title not-pass\">\n                  {user.name} пока не получал отзывов\n                </div>\n              ) : (\n                <div>\n                  <div className=\"right__title not-pass\">\n                    {user.name} пока не прошел тест\n                    <br />\n                    на исполнителя\n                  </div>\n                  <div className=\"user__reviews\">\n                    <img\n                      className=\"blur__img\"\n                      src=\"/images/blue_reviews.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserDetailPage;\n","import { default as ReactSelect } from \"react-select\";\nimport \"../scss/vendor/select.scss\";\nimport React from \"react\";\n\nfunction Select(props) {\n  return (\n    <ReactSelect\n      {...Object.assign({}, props, {\n        className: \"select\",\n        classNamePrefix: \"select\",\n      })}\n    />\n  );\n}\n\nexport default Select;\n","import DatePicker from \"react-modern-calendar-datepicker\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport \"../scss/vendor/datepicker.scss\";\nimport React from \"react\";\n\nconst LOCALE_RU = {\n  // months list by order\n  months: [\n    \"Январь\",\n    \"Февраль\",\n    \"Март\",\n    \"Апрель\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Август\",\n    \"Сентябрь\",\n    \"Октябрь\",\n    \"Ноябрь\",\n    \"Декабрь\",\n  ],\n\n  // week days by order\n  weekDays: [\n    {\n      name: \"Воскресенье\", // used for accessibility\n      short: \"Вс\", // displayed at the top of days' rows\n      isWeekend: true, // is it a formal weekend or not?\n    },\n    {\n      name: \"Понедельник\",\n      short: \"Пн\",\n    },\n    {\n      name: \"Вторник\",\n      short: \"Вт\",\n    },\n    {\n      name: \"Среда\",\n      short: \"Ср\",\n    },\n    {\n      name: \"Четверг\",\n      short: \"Чт\",\n    },\n    {\n      name: \"Пятница\",\n      short: \"Пт\",\n    },\n    {\n      name: \"Суббота\",\n      short: \"Сб\",\n      isWeekend: true,\n    },\n  ],\n\n  // just play around with this number between 0 and 6\n  weekStartingIndex: 1,\n\n  // return a { year: number, month: number, day: number } object\n  getToday(gregorainTodayObject) {\n    return gregorainTodayObject;\n  },\n\n  // return a native JavaScript date here\n  toNativeDate(date) {\n    return new Date(date.year, date.month - 1, date.day);\n  },\n\n  // return a number for date's month length\n  getMonthLength(date) {\n    return new Date(date.year, date.month, 0).getDate();\n  },\n\n  // return a transformed digit to your locale\n  transformDigit(digit) {\n    return digit;\n  },\n\n  // texts in the date picker\n  nextMonth: \"Следующий месяц\",\n  previousMonth: \"Предыдущий месяц\",\n  openMonthSelector: \"Перейти к выбору месяца\",\n  openYearSelector: \"Перейти к выбору года\",\n  closeMonthSelector: \"Завершить выбор месяца\",\n  closeYearSelector: \"Завершить выбор года\",\n  defaultPlaceholder: \"Выберите...\",\n\n  // for input range value\n  from: \"с\",\n  to: \"по\",\n\n  // used for input value when multi dates are selected\n  digitSeparator: \"-\",\n\n  // if your provide -2 for example, year will be 2 digited\n  yearLetterSkip: 0,\n\n  // is your language rtl or ltr?\n  isRtl: false,\n};\n\nexport default function (props) {\n  props = Object.assign({}, props, {\n    locale: !props.locale || props.locale === \"ru\" ? LOCALE_RU : props.locale,\n    inputClassName: props.inputClassName\n      ? props.inputClassName + \" t-input\"\n      : \"t-input\",\n    colorPrimary: \"#0052F1\",\n  });\n  return <DatePicker {...props} />;\n}\n","import React, { useState } from \"react\";\nimport CSRF from \"../CSRF\";\nimport { openModal } from \"../Modal\";\nimport Select from \"../Select\";\nimport DatePicker from \"../DatePicker\";\n\n// TODO: check if all inputs all filled in\n\nfunction SignUpPage() {\n  const [grades] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),\n    [birthday, setBirthday] = useState(null),\n    [currentStep, setCurrentStep] = useState(1),\n    [name, setName] = useState(\"\"),\n    [surname, setSurname] = useState(\"\"),\n    [school, setSchool] = useState(\"\"),\n    [grade, setGrade] = useState(null);\n  return (\n    <div className=\"app-page registration-app-page\">\n      <div className={`registration active${currentStep}`}>\n        <div className=\"container registration__cont\">\n          <div className=\"registration__left\">\n            <header className=\"header unregistered\" id=\"header\">\n              <div className=\"header__logo\">\n                <a className=\"logo\" href=\"/\">\n                  tutoria\n                </a>\n              </div>\n\n              <a className=\"home__btn\" href=\"/\">\n                <img src=\"/images/icons/home__btn.png\" alt=\"\" />\n                <span>Главная</span>\n              </a>\n\n              <a\n                className=\"t-btn transparent__blue header__signin modal__open\"\n                onClick={() => openModal(\"signin\")}\n              >\n                Войти\n              </a>\n            </header>\n            <div className=\"registration__box\">\n              <div className=\"t-title\">Пройдите все этапы регистрации</div>\n              <form\n                id=\"signupForm\"\n                className=\"registration__form\"\n                action=\"/signup\"\n                method=\"POST\"\n              >\n                <div className=\"error__text\" id=\"errorText\"></div>\n                <CSRF />\n                <div className=\"registration__progress\">\n                  <div className=\"progress__line\"></div>\n                  <div className=\"progress__step progress__1\">1</div>\n                  <div className=\"progress__step progress__2\">2</div>\n                  <div className=\"progress__step progress__3\">3</div>\n                </div>\n                <div\n                  className=\"step1 step\"\n                  style={{ display: currentStep === 1 ? \"block\" : \"none\" }}\n                >\n                  <div className=\"step__box\">\n                    <div className=\"step__head\">\n                      <div className=\"form-control\">\n                        <input\n                          className=\"t-input\"\n                          type=\"text\"\n                          name=\"name\"\n                          placeholder=\"Имя\"\n                          value={name}\n                          onChange={(event) => setName(event.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-control\">\n                        <input\n                          className=\"t-input\"\n                          type=\"text\"\n                          name=\"surname\"\n                          placeholder=\"Фамилия\"\n                          value={surname}\n                          onChange={(event) => setSurname(event.target.value)}\n                        />\n                      </div>\n                      <div className=\"control__input\">\n                        <DatePicker\n                          id=\"datepicker\"\n                          value={birthday}\n                          onChange={setBirthday}\n                          inputName=\"birthday\"\n                          inputClassName=\"t-input\"\n                          inputPlaceholder=\"Дата рождения\"\n                          formatInputText={() =>\n                            birthday\n                              ? `${birthday.day}.${birthday.month}.${birthday.year}`\n                              : null\n                          }\n                        />\n                        <img\n                          className=\"control__icon\"\n                          src=\"/images/icons/calendar.png\"\n                          alt=\"\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"step__foot\">\n                      <span\n                        className=\"t-btn to transparent__blue\"\n                        onClick={() => {\n                          if (name.length && surname.length && birthday) {\n                            setCurrentStep(currentStep + 1);\n                          }\n                        }}\n                      >\n                        Далее\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className=\"step2 step\"\n                  style={{ display: currentStep === 2 ? \"block\" : \"none\" }}\n                >\n                  <div className=\"step__box\">\n                    <div className=\"step__head\">\n                      <div className=\"form-control\">\n                        <input\n                          className=\"t-input\"\n                          type=\"text\"\n                          name=\"school\"\n                          placeholder=\"Школа\"\n                          value={school}\n                          onChange={(event) => setSchool(event.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-control\">\n                        <Select\n                          id=\"registration__class\"\n                          name=\"grade\"\n                          options={grades.map((grade) => ({\n                            label: `${grade} класс`,\n                            value: grade,\n                          }))}\n                          placeholder=\"Класс\"\n                          value={\n                            grade\n                              ? { value: grade, label: `${grade} класс` }\n                              : null\n                          }\n                          onChange={(option) => setGrade(option.value)}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"step__foot\">\n                      <span\n                        className=\"t-btn default\"\n                        data-step=\"1\"\n                        onClick={() => setCurrentStep(currentStep - 1)}\n                      >\n                        Назад\n                      </span>\n                      <span\n                        className=\"t-btn to transparent__blue\"\n                        data-step=\"3\"\n                        data-count=\"2\"\n                        onClick={() => {\n                          if (school.length && grade) {\n                            setCurrentStep(currentStep + 1);\n                          }\n                        }}\n                      >\n                        Далее\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className=\"step3 step\"\n                  style={{ display: currentStep === 3 ? \"block\" : \"none\" }}\n                >\n                  <div className=\"step__box\">\n                    <div className=\"step__head\">\n                      <div className=\"form-control\">\n                        <input\n                          className=\"t-input\"\n                          type=\"email\"\n                          name=\"email\"\n                          placeholder=\"Электронная почта\"\n                          required=\"required\"\n                        />\n                      </div>\n                      <div className=\"form-control\">\n                        <input\n                          className=\"t-input\"\n                          type=\"text\"\n                          name=\"login\"\n                          placeholder=\"Логин\"\n                          required=\"required\"\n                        />\n                      </div>\n                      <div className=\"d-flex\">\n                        <div className=\"form-control\">\n                          <input\n                            className=\"t-input\"\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Пароль\"\n                            required=\"required\"\n                          />\n                        </div>\n                        <div className=\"form-control\">\n                          <input\n                            className=\"t-input\"\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            placeholder=\"Еще раз\"\n                            required=\"required\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"step__foot\">\n                      <span\n                        className=\"t-btn default\"\n                        data-step=\"2\"\n                        onClick={() => setCurrentStep(currentStep - 1)}\n                      >\n                        <img\n                          src=\"/images/icons/registration__icon.png\"\n                          alt=\"\"\n                        />\n                      </span>\n\n                      <button\n                        className=\"t-btn to transparent__blue submit\"\n                        type=\"submit\"\n                      >\n                        Создать аккаунт\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"registration__right\">\n            <div\n              className=\"step1 step__visual\"\n              style={{ display: currentStep === 1 ? \"block\" : \"none\" }}\n            >\n              <div className=\"t-title\">Найди задачу на сайте</div>\n              <div className=\"t-subtitle\">\n                Пользователь создаёт объявление на сайте\n              </div>\n              <img\n                className=\"step__img\"\n                src=\"/images/registration/1.png\"\n                alt=\"\"\n              />\n            </div>\n            <div\n              className=\"step2 step__visual\"\n              style={{ display: currentStep === 2 ? \"block\" : \"none\" }}\n            >\n              <div className=\"t-title\">Реши её</div>\n              <div className=\"t-subtitle\">\n                Решаешь задачу и объясняешь ход своих\n              </div>\n              <img\n                className=\"step__img\"\n                src=\"/images/registration/2.png\"\n                alt=\"\"\n              />\n            </div>\n            <div\n              className=\"step3 step__visual\"\n              style={{ display: currentStep === 3 ? \"block\" : \"none\" }}\n            >\n              <div className=\"t-title\">Получи вознаграждение</div>\n              <div className=\"t-subtitle\">Пользователь платит за задание</div>\n              <img\n                className=\"step__img\"\n                src=\"/images/landing/about3.png\"\n                alt=\"\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"overlay\"></div>\n      <div className=\"modal modal__signin\" data-modal=\"reset\" id=\"resetModal\">\n        <div className=\"modal__close\">\n          <img className=\"img-svg\" src=\"/images/icons/close.svg\" alt=\"\" />\n        </div>\n        <div className=\"modal__title\">Восстановление пароля</div>\n        <form\n          className=\"modal__form\"\n          method=\"POST\"\n          action=\"/reset\"\n          id=\"resetForm\"\n        >\n          <CSRF />\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Адрес эл. почты</div>\n            <input\n              className=\"modal__input\"\n              type=\"email\"\n              name=\"email\"\n              required=\"required\"\n              placeholder=\"Адрес эл. почты\"\n            />\n          </div>\n          <div className=\"modal__warning\">\n            На этот адрес придёт уникальная ссылка для восстановления пароля\n          </div>\n          <button className=\"t-btn blue\" type=\"submit\">\n            Подтвердить\n          </button>\n        </form>\n        <div className=\"modal__additional\">\n          <a className=\"additional__btn modal__open\" data-modal=\"signin\">\n            Войти\n          </a>\n          <a className=\"additional__btn\" href=\"/signup\">\n            Зарегистрироваться\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUpPage;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport User from \"../../models/User\";\nimport CSRF from \"../CSRF\";\nimport Footer from \"../Footer\";\nfunction ResetPasswordPage() {\n  const urlParams = useParams(),\n    [user] = useState(new User());\n  return (\n    <div className=\"app-page auth\">\n      <Header />\n      <div className=\"create resetPassword\">\n        <div className=\"container create__cont\">\n          <h1 className=\"t-title\">Сброс пароля</h1>\n\n          <form\n            className=\"create__box\"\n            method=\"POST\"\n            action=\"/new-password\"\n            id=\"newPasswordForm\"\n          >\n            <div className=\"create__item\">\n              <input\n                className=\"t-input\"\n                type=\"password\"\n                placeholder=\"Новый пароль\"\n                autocomplete=\"off\"\n                name=\"password\"\n                required=\"required\"\n              />\n            </div>\n            <div className=\"create__item\">\n              <input\n                className=\"t-input\"\n                type=\"password\"\n                placeholder=\"Новый пароль еще раз\"\n                autocomplete=\"off\"\n                name=\"confirmPassword\"\n                required=\"required\"\n              />\n            </div>\n            <input type=\"hidden\" name=\"userId\" value={user.id} />\n            <input type=\"hidden\" name=\"passwordToken\" value={urlParams.token} />\n            <CSRF />\n            <button className=\"t-btn transparent__blue\" type=\"submit\">\n              Изменить пароль\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ResetPasswordPage;\n","import React from \"react\";\nimport Header from \"../Header\";\n\nfunction Error404Page() {\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <img className=\"image\" src=\"/images/404error.png\" alt=\"\" />\n    </div>\n  );\n}\n\nexport default Error404Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../Header\";\n\nfunction ErrorPage(props) {\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <h1 className=\"t-title\">{props.errorText} </h1>\n    </div>\n  );\n}\n\nErrorPage.propTypes = {\n  errorText: PropTypes.string, // Текст ошибки\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nfunction Error400Page() {\n  return <ErrorPage errorText=\"Ссылка устарела или недействительна!\" />;\n}\n\nexport default Error400Page;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nfunction Error403Page() {\n  return <ErrorPage errorText=\"Нет доступа!\" />;\n}\n\nexport default Error403Page;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nfunction Error500Page() {\n  return <ErrorPage errorText=\"Ошибка сервера!\" />;\n}\n\nexport default Error500Page;\n","import React, { useState } from \"react\";\nimport Header from \"../Header.js\";\nimport User from \"../../models/User.js\";\nimport CSRF from \"../CSRF.js\";\nimport { forceNumericOnly, className } from \"../../utils\";\nimport InputMask from \"react-input-mask\";\nimport Modal, { openModal } from \"../Modal.js\";\nimport Select from \"../Select\";\n\nfunction sendConfirmationLink(event) {\n  /*$.ajax({\n    url: `/profile/send-confirmation?_csrf=${csrfToken}`,\n    type: 'POST',\n    success: function() {\n      window.location.reload(false);\n    }\n  });*/\n  event.preventDefault();\n  alert(\"Confirmaton link sent!\");\n  return false;\n}\n\nfunction ProfileMePage() {\n  const user = new User(),\n    [withdrawalMethodError, setWithdrawalMethodError] = useState(false),\n    [withdrawalMethod, setWithdrawalMethod] = useState({\n      value: null,\n      label: \"\",\n    });\n\n  function checkWithdrawalMethod() {\n    if ([\"qiwi\", \"card\"].indexOf(withdrawalMethod.value) + 1) {\n      return openModal(withdrawalMethod.value);\n    } else if (!withdrawalMethod.value) {\n      return;\n    } else {\n      return setWithdrawalMethodError(true);\n    }\n  }\n\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <div className=\"container\">\n        <div className=\"warningMessage active\">\n          <img className=\"message-icon\" src=\"/images/bookmark.svg\" alt=\"\" />\n          <div className=\"message-close\" id=\"message-{lose\">\n            <img src=\"/images/icons/close.svg\" alt=\"\" />\n          </div>\n          <div className=\"message-content\">\n            <div className=\"message-title\">Подтвердите свой Email</div>\n            <div className=\"message-description\">\n              Мы отправили вам на почту письмо с ссылкой для подтверждения.{\" \"}\n              <br />\n              Нажмите{\" \"}\n              <a\n                id=\"sendConfirmationLink\"\n                href=\"#\"\n                onClick={sendConfirmationLink}\n              >\n                сюда\n              </a>\n              , чтобы получить новое письмо.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"user\">\n        <div className=\"error__box\" id=\"errorBox\">\n          <div className=\"error__text\" id=\"errorText\" />\n        </div>\n        <div className=\"container user__cont\">\n          <div className=\"user__left\">\n            <a className=\"modal__open\" onClick={() => openModal(\"avatar\")}>\n              <div className=\"user__head\">\n                <div\n                  className=\"head__img\"\n                  style={{ backgroundImage: `url(/${user.profilePic})` }}\n                />\n                <div className=\"head__info\">\n                  <div className=\"user__name\">\n                    {user.name} {user.surname}\n                  </div>\n                  <div className=\"user__nickname\">{user.login}</div>\n                </div>\n              </div>\n            </a>\n            <div className=\"user__info\">\n              <div className=\"info__label\">\n                <div className=\"info__label\">Адрес эл. почты:</div>\n                <div className=\"info__value\">{user.email}</div>\n                <input\n                  className=\"info__input\"\n                  type=\"text\"\n                  name=\"email\"\n                  value={user.email}\n                />\n                <div className=\"info__edit\">\n                  <button\n                    className=\"modal__open\"\n                    onClick={() => openModal(\"email\")}\n                    style={{ backgroundColor: \"transparent\", outline: \"none\" }}\n                  >\n                    <img\n                      className=\"img-svg\"\n                      src=\"/images/icons/edit.svg\"\n                      alt=\"\"\n                    />\n                  </button>\n                </div>\n              </div>\n              <div className=\"info__label\">\n                <div className=\"info__label\">Возраст:</div>\n                <div className=\"info__value\">{user.age} лет</div>\n                <input\n                  className=\"info__input\"\n                  type=\"text\"\n                  name=\"age\"\n                  value={user.age}\n                />\n                <div className=\"info__edit\">\n                  <img\n                    className=\"img-svg\"\n                    src=\"/images/icons/edit.svg\"\n                    alt=\"\"\n                  />\n                </div>\n              </div>\n              <div className=\"info__label\">\n                <div className=\"info__label\">В tutoria:</div>\n                <div className=\"info__value\">{user.timeString}</div>\n              </div>\n              <div className=\"info__label\">\n                <div className=\"info__label\">Баланс:</div>\n                <div className=\"info__value\">{user.balance} ₽</div>\n                <div className=\"info__edit-no-modify\">\n                  <button\n                    className=\"modal__open\"\n                    onClick={() => openModal(\"deposit\")}\n                    style={{ backgroundColor: \"transparent\", outline: \"none\" }}\n                  >\n                    <img\n                      className=\"img-svg\"\n                      src=\"/images/icons/card_1_add.svg\"\n                      alt=\"\"\n                    />\n                  </button>\n                  <button\n                    className=\"modal__open\"\n                    onClick={() => openModal(\"withdraw\")}\n                    style={{ backgroundColor: \"transparent\", outline: \"none\" }}\n                  >\n                    <img\n                      className=\"img-svg\"\n                      src=\"/images/icons/card_1_minus.svg\"\n                      alt=\"\"\n                    />\n                  </button>\n                </div>\n              </div>\n            </div>\n            <button\n              className=\"user__password modal__open t-btn default\"\n              onClick={() => openModal(\"password\")}\n            >\n              Изменить пароль\n            </button>\n            <a\n              className=\"user__password t-btn default\"\n              href=\"/profile/check-bills\"\n            >\n              Обновить баланс\n            </a>\n          </div>\n          {user.reviews.length === 0 ? (\n            <div className=\"user__right\">\n              <div className=\"right__title\">\n                Личный рейтинг <br />и отзывы\n              </div>\n              <div className=\"right__subtitle\">Пока нет отзывов</div>\n              {!user.isWorker ? (\n                <form\n                  method=\"POST\"\n                  action=\"/profile/start-working\"\n                  id=\"workerForm\"\n                >\n                  <input type=\"hidden\" name=\"userID\" value={user.id} />\n                  <CSRF />\n                  <button className=\"right__btn t-btn blue\" type=\"submit\">\n                    Стать исполнителем\n                  </button>\n                </form>\n              ) : (\n                \"\"\n              )}\n            </div>\n          ) : (\n            <div className=\"user__right absolute\">\n              <div className=\"right__title\">\n                Личный рейтинг\n                <br />и отзывы\n              </div>\n              <div className=\"right__subtitle\">\n                {user.rating} / 5 — {user.jobCountString}{\" \"}\n              </div>\n              <div className=\"user__reviews\">\n                <div className=\"reviews__box\">\n                  {user.reviews.map((review) => (\n                    <div className=\"review\">\n                      <div className=\"rating-area\">\n                        {[5, 4, 3, 2, 1].map((rating) => (\n                          <label\n                            for={`1star-${rating}`}\n                            title={`Оценка «${rating}»`}\n                          >\n                            <input\n                              type=\"radio\"\n                              id={`1star-${rating}`}\n                              name=\"1rating\"\n                              value={rating}\n                              checked={review.rating === rating}\n                            />\n                          </label>\n                        ))}\n                      </div>\n                      <div className=\"review__text\">{review.body}</div>\n                      <div className=\"review__author\">\n                        {review.author.name} {review.author.surname}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <Modal name=\"password\" title=\"Изменение пароля\">\n        <form\n          className=\"modal__form\"\n          action=\"/profile/change-password\"\n          method=\"POST\"\n          id=\"changePassForm\"\n        >\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Текущий пароль</div>\n            <input\n              className=\"modal__input\"\n              type=\"password\"\n              name=\"curPassword\"\n              required=\"required\"\n              placeholder=\"Текущий пароль\"\n            />\n          </div>\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Новый пароль</div>\n            <input\n              className=\"modal__input\"\n              type=\"password\"\n              name=\"newPassword\"\n              required=\"required\"\n              placeholder=\"Новый пароль\"\n            />\n          </div>\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Новый пароль еще раз</div>\n            <input\n              className=\"modal__input\"\n              type=\"password\"\n              name=\"confirmPassword\"\n              required=\"required\"\n              placeholder=\"Новый пароль еще раз\"\n            />\n          </div>\n          <CSRF />\n          <button className=\"t-btn blue\" type=\"submit\">\n            Изменить пароль\n          </button>\n        </form>\n      </Modal>\n      <Modal title=\"Изменить адрес эл. почты\" name=\"email\">\n        <form\n          className=\"modal__form\"\n          action=\"/profile/change-email\"\n          method=\"POST\"\n          id=\"emailForm\"\n        >\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Текущий email</div>\n            <input\n              className=\"modal__input\"\n              type=\"email\"\n              name=\"curEmail\"\n              required=\"required\"\n              placeholder=\"Текущий email\"\n            />\n          </div>\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Новый email</div>\n            <input\n              className=\"modal__input\"\n              type=\"email\"\n              name=\"newEmail\"\n              required=\"required\"\n              placeholder=\"Новый email\"\n            />\n          </div>\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Подтвердить email</div>\n            <input\n              className=\"modal__input\"\n              type=\"email\"\n              name=\"confirmEmail\"\n              required=\"required\"\n              placeholder=\"Подтвердить email\"\n            />\n          </div>\n          <CSRF />\n          <button className=\"t-btn blue\" type=\"submit\">\n            Изменить адрес эл. почты\n          </button>\n        </form>\n      </Modal>\n      <Modal\n        title=\"Выберите способ оплаты!\"\n        name=\"withdraw\"\n        className={className({\n          model__withdraw: true,\n          error: withdrawalMethodError,\n        })}\n        onClose={() => {\n          setWithdrawalMethodError(false);\n          setWithdrawalMethod({ value: null, label: \"\" });\n        }}\n      >\n        <div className=\"error__text\">Выберите способ оплаты!</div>\n        <div className=\"modal__form\">\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Способ выплаты</div>\n            <div className=\"control__input\">\n              <Select\n                options={[\n                  { value: \"card\", label: \"Вывод на карту\" },\n                  { value: \"qiwi\", label: \"Вывод на Qiwi кошелек\" },\n                ]}\n                onChange={(option) => setWithdrawalMethod(option)}\n                name=\"method\"\n                placeholder=\"Не выбран\"\n              />\n            </div>\n            <img\n              className=\"img-svg error__icon\"\n              src=\"/images/icons/alert.svg\"\n            />\n          </div>\n          <button\n            className=\"t-btn blue\"\n            type=\"submit\"\n            onClick={checkWithdrawalMethod}\n          >\n            Далее\n          </button>\n        </div>\n      </Modal>\n      <Modal\n        name=\"qiwi\"\n        title=\"Вывод денег на Qiwi кошелёк\"\n        className=\"modal__qiwi\"\n      >\n        <div className=\"error__text\">Минимальный бюджет 100₽</div>\n        <form\n          className=\"modal__form\"\n          id=\"qiwiWithdrawForm\"\n          method=\"POST\"\n          action=\"/profile/withdraw-qiwi\"\n        >\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Номер Qiwi кошелька</div>\n            <InputMask\n              className=\"modal__input\"\n              name=\"qiwiNum\"\n              id=\"qiwi__mask\"\n              type=\"tel\"\n              autoComplete={false}\n              required={true}\n              placeholder=\"\"\n              mask=\"+99999999999\"\n            />\n          </div>\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Сумма на вывод</div>\n            <div className=\"control__input\">\n              <input\n                className=\"modal__input\"\n                type=\"tel\"\n                name=\"amount\"\n                autocomplete=\"off\"\n                required=\"required\"\n                placeholder=\"\"\n                id=\"qiwiAmountInput\"\n                onKeyDown={forceNumericOnly}\n                onKeyUp={(e) => {\n                  const amount = +e.target.value;\n                  document.querySelector(\"#qiwiAmountSpan\").innerHTML =\n                    amount +\n                    Math.round((amount * 0.07 + Number.EPSILON) * 100) / 100;\n                }}\n              />\n            </div>\n          </div>\n          <CSRF />\n          <div className=\"modal__warning\">Комиссия при выводе на киви: 7%</div>\n          <div className=\"modal__warning\">\n            Сумма к оплате: <span id=\"qiwiAmountSpan\">0</span> рублей\n          </div>\n          <button className=\"t-btn blue\" type=\"submit\">\n            Вывести\n          </button>\n        </form>\n      </Modal>\n      <Modal className=\"modal__card\" name=\"card\" title=\"Вывод на карту\">\n        <div className=\"error__text\">Минимальный бюджет 100₽</div>\n        <form\n          className=\"modal__form\"\n          id=\"cardWithdrawForm\"\n          method=\"POST\"\n          action=\"/profile/withdraw-card\"\n        >\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Тип карты</div>\n            <div className=\"control__input\">\n              <Select\n                id=\"card__type\"\n                name=\"cartType\"\n                required={true}\n                options={[\n                  { value: \"Visa\", label: \"Visa\" },\n                  { value: \"Mastercard\", label: \"Mastercard\" },\n                  { value: \"Mir\", label: \"МИР\" },\n                  { value: \"Qiwi\", label: \"Виртуальная карта Qiwi\" },\n                ]}\n                placeholder=\"Не выбран\"\n              />\n            </div>\n          </div>\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Номер карты</div>\n            <InputMask\n              className=\"modal__input\"\n              id=\"card__mask\"\n              type=\"tel\"\n              name=\"cardNum\"\n              autoComplete={false}\n              required={true}\n              placeholder=\"\"\n              mask=\"9999 9999 9999 9999\"\n            />\n          </div>\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Сумма на вывод</div>\n            <div className=\"control__input\">\n              <input\n                className=\"modal__input\"\n                id=\"cardAmountInput\"\n                type=\"tel\"\n                name=\"amount\"\n                autocomplete=\"off\"\n                required=\"required\"\n                placeholder=\"\"\n                onKeyDown={forceNumericOnly}\n                onKeyUp={(e) => {\n                  const amount = +e.target.value;\n                  document.querySelector(\"#cardAmountSpan\").innerHTML =\n                    amount +\n                    Math.round((amount * 0.05 + Number.EPSILON) * 100) / 100 +\n                    50;\n                }}\n              />\n              ₽\n            </div>\n          </div>\n          <div className=\"modal__warning\">\n            Комиссия при выводе на карту: 5% + 50 рублей\n          </div>\n          <div className=\"modal__warning\">\n            Сумма к оплате: <span id=\"cardAmountSpan\">0</span> рублей\n          </div>\n          <CSRF />\n          <button className=\"t-btn blue\" type=\"submit\">\n            Вывести\n          </button>\n        </form>\n      </Modal>\n      <Modal name=\"deposit\" title=\"Пополнить баланс\">\n        <form\n          className=\"modal__form\"\n          action=\"/profile/deposit-funds\"\n          method=\"POST\"\n          id=\"depositForm\"\n        >\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Сумма пополнения</div>\n            <input\n              className=\"modal__input\"\n              type=\"text\"\n              name=\"amount\"\n              required=\"required\"\n              placeholder=\"Сумма пополнения\"\n            />\n          </div>\n          <CSRF />\n          <div className=\"modal__warning\">\n            Комиссия при пополнение через Qiwi кошелёк: 0%\n          </div>\n          <div className=\"modal__warning\">\n            Комиссия при пополнение через карту: 1%\n          </div>\n          <button className=\"t-btn blue\" type=\"submit\">\n            Перейти на сайт кассы\n          </button>\n        </form>\n      </Modal>\n      <Modal name=\"avatar\" title=\"Изменить картинку профиля\">\n        <form\n          className=\"modal__form\"\n          action=\"/profile/edit-avatar\"\n          method=\"POST\"\n          id=\"avatarForm\"\n          enctype=\"multipart/form-data\"\n        >\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Новая картинка профиля</div>\n            <input\n              className=\"modal__input\"\n              type=\"file\"\n              name=\"avatar\"\n              required=\"required\"\n            />\n          </div>\n          <button className=\"t-btn blue\" type=\"submit\">\n            Подтвердить\n          </button>\n        </form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ProfileMePage;\n","import React, { useState, createRef } from \"react\";\n\nfunction UploadBox(props) {\n  const [files, setFiles] = useState([]);\n  return (\n    <div className=\"upload__box\">\n      <div className=\"upload__items\">\n        {files.map((file) => (\n          <div className=\"upload__item\">\n            <div className=\"upload__name\">{file.name}</div>\n          </div>\n        ))}\n      </div>\n      <div\n        className=\"upload__btn t-btn default\"\n        onClick={(event) => {\n          let input = event.target.querySelector(\"input.upload__event\");\n          if (input) {\n            input.dispatchEvent(new MouseEvent(\"click\"));\n          }\n        }}\n      >\n        <input\n          className=\"upload__input\"\n          type=\"file\"\n          name={props.name}\n          multiple={props.multiple ? \"multiple\" : null}\n          id={props.id}\n          onChange={(event) => {\n            console.log(event);\n            let newFiles = Array.from(files);\n            newFiles.push(...Array.from(event.target.files));\n            setFiles(newFiles);\n          }}\n        />\n        <div className=\"upload__label\">\n          {props.multiple && files.length && props.moreLabel\n            ? props.moreLabel\n            : props.label}\n        </div>\n      </div>\n      <div className=\"upload__result\" />\n    </div>\n  );\n}\n\nexport default UploadBox;\n","import React, { useState } from \"react\";\nimport Job from \"../../models/Job\";\nimport Select from \"../Select\";\nimport DatePicker from \"../DatePicker\";\nimport UploadBox from \"../UploadBox\";\n\nfunction ProfileEditJobPage() {\n  const [job] = useState(new Job()),\n    grades = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n    subjects = [\"Subject 1\", \"Subject 2\"],\n    [deadline, setDeadline] = useState(null);\n  return (\n    <div className=\"app-page\">\n      <div className=\"create\">\n        <div className=\"container create__cont\">\n          <h1 className=\"t-title\">Создать объявление</h1>\n          <form\n            className=\"create__box\"\n            enctype=\"multipart/form-data\"\n            method=\"POST\"\n            action=\"/profile/edit-job\"\n            id=\"jobEditForm\"\n          >\n            <div className=\"create__item\">\n              <input\n                className=\"t-input\"\n                type=\"text\"\n                value={job.title}\n                placeholder=\"Название\"\n                name=\"title\"\n                required=\"required\"\n              />\n            </div>\n            <div className=\"create__item\">\n              <div className=\"d-flex\">\n                <div className=\"form-control\">\n                  <span className=\"control__label\">Сделать до</span>\n                  <div className=\"control__input\">\n                    <DatePicker\n                      value={deadline}\n                      onChange={(deadline) => setDeadline(deadline)}\n                      inputName=\"deadline\"\n                      inputClassName=\"t-input\"\n                      inputPlaceholder=\"Не указано\"\n                      formatInputText={() =>\n                        deadline\n                          ? `${deadline.day}.${deadline.month}.${deadline.year}`\n                          : null\n                      }\n                    />\n                    <img\n                      className=\"control__icon\"\n                      src=\"/images/icons/calendar.png\"\n                      alt=\"\"\n                    />{\" \"}\n                  </div>\n                </div>\n                <div className=\"form-control\">\n                  <span className=\"control__label\">Цена</span>\n                  <div className=\"control__input\">\n                    <input\n                      className=\"t-input\"\n                      type=\"text\"\n                      value={job.price}\n                      placeholder=\"Не указано\"\n                      name=\"price\"\n                      required=\"required\"\n                    />\n                    ₽{\" \"}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"create__item\">\n              <div className=\"d-flex\">\n                <div className=\"form-control\">\n                  <span className=\"control__label lg\">Выберите класс</span>\n                  <span className=\"control__label xs\">Класс</span>\n                  <div className=\"control__input\">\n                    <Select\n                      id=\"filter__class\"\n                      name=\"grade\"\n                      options={grades.map((grade) => ({\n                        label: `${grade} класс`,\n                        value: grade,\n                        selected: job.grade === grade,\n                      }))}\n                      placeholder=\"Не выбран\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form-control\">\n                  <span className=\"control__label lg\">Выберите предмет</span>\n                  <span className=\"control__label xs\">Предмет</span>\n                  <div className=\"control__input\">\n                    <Select\n                      id=\"filter__subject\"\n                      name=\"subject\"\n                      options={subjects.map((subject) => ({\n                        label: subject,\n                        value: subject,\n                        selected: job.subject === subject,\n                      }))}\n                      placeholder=\"Не выбран\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"create__item\">\n              <textarea\n                className=\"t-textarea\"\n                name=\"description\"\n                placeholder=\"Описание проекта\"\n                required=\"required\"\n              >\n                {job.description}\n              </textarea>\n            </div>\n            <UploadBox\n              name=\"attachments\"\n              multiple={true}\n              id=\"attachmentsInput\"\n              label=\"Прикрепить файл\"\n              moreLabel=\"Прикрепить еще один файл\"\n            />\n            <button className=\"t-btn transparent__blue\" type=\"submit\">\n              Изменить объявление\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileEditJobPage;\n","import React, { useState } from \"react\";\nimport Header from \"../Header\";\nimport Select from \"../Select\";\nimport DatePicker from \"../DatePicker\";\nimport UploadBox from \"../UploadBox\";\n\nfunction ProfileAddJobPage() {\n  const subjects = [\"Маематика\", \"Русский\"],\n    grades = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n    [date, setDate] = useState(null);\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <div className=\"create\">\n        <div className=\"container create__cont\">\n          <h1 className=\"t-title\">Создать объявление</h1>\n          {/*<%- include('../../includes/error.ejs') %>*/}\n          <form\n            className=\"create__box\"\n            enctype=\"multipart/form-data\"\n            method=\"POST\"\n            action=\"/profile/add-job\"\n            id=\"jobAddForm\"\n          >\n            <div className=\"create__item\">\n              <input\n                className=\"t-input\"\n                type=\"text\"\n                placeholder=\"Название\"\n                name=\"title\"\n                required=\"required\"\n              />{\" \"}\n            </div>\n            <div className=\"create__item\">\n              <div className=\"d-flex\">\n                <div className=\"form-control\">\n                  <span className=\"control__label\">Сделать до</span>\n                  <div className=\"control__input\">\n                    <DatePicker\n                      value={date}\n                      onChange={(date) => setDate(date)}\n                      inputName=\"deadlibe\"\n                      input=\"t-input\"\n                      inputPlaceholder=\"Не указано\"\n                      formatInputText={() =>\n                        date ? `${date.day}.${date.month}.${date.year}` : null\n                      }\n                      minimumDate={new Date()}\n                    />\n                    <img\n                      className=\"control__icon\"\n                      src=\"/images/icons/calendar.png\"\n                      alt=\"\"\n                    />{\" \"}\n                  </div>\n                </div>\n                <div className=\"form-control\">\n                  <span className=\"control__label\">Цена</span>\n                  <div className=\"control__input\">\n                    <input\n                      className=\"t-input\"\n                      type=\"text\"\n                      placeholder=\"Не указано\"\n                      name=\"price\"\n                      required=\"required\"\n                    />{\" \"}\n                    <img\n                      className=\"control__icon\"\n                      src=\"/images/icons/currency.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"create__item\">\n              <div className=\"d-flex\">\n                <div className=\"form-control\">\n                  <span className=\"control__label lg\">Выберите класс</span>\n                  <span className=\"control__label xs\">Класс</span>\n                  <div className=\"control__input\">\n                    <Select\n                      id=\"filter__class\"\n                      name=\"grade\"\n                      options={grades.map((grade) => ({\n                        label: `${grade} класс`,\n                        value: grade,\n                      }))}\n                      placeholder=\"Не выбран\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form-control\">\n                  <span className=\"control__label lg\">Выберите предмет</span>\n                  <span className=\"control__label xs\">Предмет</span>\n                  <div className=\"control__input\">\n                    <Select\n                      id=\"filter__subject\"\n                      name=\"subject\"\n                      options={subjects.map((subject) => ({\n                        label: subject,\n                        value: subject,\n                      }))}\n                      placeholder=\"Не выбран\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"create__item\">\n              <textarea\n                className=\"t-textarea\"\n                name=\"description\"\n                placeholder=\"Описание проекта\"\n                required=\"required\"\n              ></textarea>\n            </div>\n            <UploadBox\n              name=\"attachments\"\n              id=\"attachmentsInput\"\n              multiple={true}\n              label=\"Прикрепить фотографию\"\n              moreLabel=\"Прикрепить еще одну фотографию\"\n            />\n            <button className=\"t-btn transparent__blue\" type=\"submit\">\n              Создать объявление\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileAddJobPage;\n","import React, { useState } from \"react\";\nimport { className } from \"../utils\";\n\nfunction DialogLoading() {\n  const [active, setActive] = useState(true);\n  // TODO: listen to real app state\n  setTimeout(() => setActive(false), 2000);\n  return (\n    <div\n      className={className({ dialog__loading: true, active })}\n      id=\"loadingOverlay\"\n    >\n      <div className=\"item-1\"></div>\n      <div className=\"item-2\"></div>\n      <div className=\"item-3\"></div>\n      <div className=\"item-4\"></div>\n      <div className=\"item-5\"></div>\n    </div>\n  );\n}\n\nexport default DialogLoading;\n","import SimpleBar from \"simplebar-react\";\nimport \"simplebar-react/dist/simplebar.min.css\";\n\nexport default SimpleBar;\n","import React from \"react\";\nimport Header from \"../Header\";\nimport User from \"../../models/User\";\nimport DialogLoading from \"../DialogLoading\";\nimport { Link } from \"react-router-dom\";\nimport SimpleBar from \"../SimpleBar\";\nimport Twilio from \"twilio-chat\";\n\nconst TWILIO_CLIENT_TOKEN = \"THE_TOKEN\";\n\n// From chat.js\nfunction handleSend(){\n  console.log('handleSend');\n}\n\nfunction ProfileDialogPage() {\n  const peer = new User();\n  //client = Twilio.Client.create(TWILIO_CLIENT_TOKEN);\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <DialogLoading />\n      <div className=\"container\">\n        <div className=\"dialog singleDialog\">\n          <div className=\"dialog__box\">\n            <div className=\"dialog__content\">\n              <div className=\"content__user\">\n                <Link\n                  to={`/user-detail/${peer.login}`}\n                  className=\"user__img\"\n                  style={{\n                    backgroundImage: `url(/${peer.profilePic})`,\n                  }}\n                ></Link>\n                <Link className=\"user__name\" to={`/user-detail/${peer.login}`}>\n                  {peer.name} {peer.surname}\n                </Link>\n              </div>\n              <div className=\"content__messages\">\n                <script\n                  id=\"sender-message-template\"\n                  type=\"text/x-custom-template\"\n                >\n                  <div className=\"messages__line my-message\">\n                    <div className=\"message\">\n                      <span className=\"message__text\">{\"{MESSAGE_BODY}\"}</span>\n                      <span className=\"message__date\">{\"{MESSAGE_DATE}\"}</span>\n                    </div>\n                  </div>\n                </script>\n                <script\n                  id=\"recipient-message-template\"\n                  type=\"text/x-custom-template\"\n                >\n                  <div className=\"messages__line user-message\">\n                    <div className=\"message\">\n                      <span className=\"message__text\">{\"{MESSAGE_BODY}\"}</span>\n                      <span className=\"message__date\">{\"{MESSAGE_DATE}\"}</span>\n                    </div>\n                  </div>\n                </script>\n                <SimpleBar autoHide={true}>\n                  <form\n                    className=\"messages__box t-scroll\"\n                    id=\"conversation\"\n                  ></form>\n                </SimpleBar>\n                <form\n                  className=\"messages__control\"\n                  id=\"sendForm\"\n                  onSubmit={(event) => {\n                    event.preventDefault();\n                    handleSend();\n                  }}\n                >\n                  <label className=\"t-action\">\n                    <img\n                      className=\"img-svg\"\n                      src=\"/images/icons/action/file.svg\"\n                      alt=\"\"\n                    />\n                    <input\n                      className=\"upload__input\"\n                      type=\"file\"\n                      id=\"file-input\"\n                      name=\"file\"\n                    />\n                  </label>\n\n                  <textarea\n                    id=\"message-input\"\n                    className=\"t-textarea message__input\"\n                    name=\"message\"\n                    placeholder=\"Ваше сообщение\"\n                    autocomplete=\"off\"\n                  ></textarea>\n\n                  <button className=\"t-action submit\" type=\"submit\">\n                    <img\n                      className=\"img-svg\"\n                      src=\"/images/icons/action/cursor.svg\"\n                      alt=\"\"\n                    />\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <script src=\"https://media.twiliocdn.com/sdk/js/chat/v3.3/twilio-chat.min.js\"></script>\n        <script src=\"/js/chat.js\"></script>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileDialogPage;\n","import React from \"react\";\nimport Job from \"../../models/Job\";\nimport CSRF from \"../CSRF\";\n\nfunction ProfileJobProposalsPage() {\n  const job = new Job();\n  return (\n    <div className=\"app-page\">\n      <div className=\"candidats\">\n        <div className=\"container candidats__cont\">\n          <div className=\"candidats__content\">\n            {/*<%- include('../../includes/error.ejs') %>*/}\n            <div className=\"t-title\">Кандидаты</div>\n            <div className=\"content__box\"></div>\n            {job.proposals.map((proposal) => (\n              <div className=\"candidat\">\n                <div className=\"candidat__head\">\n                  <div className=\"candidat__info\">\n                    <a\n                      className=\"candidat__img\"\n                      href=\"#\"\n                      style=\"background-image: url('/<%= p.user.profilePic %>')\"\n                    >\n                      {\" \"}\n                    </a>\n                    <div className=\"candidat__rates\">\n                      <div className=\"title\">Рейтинг:</div>\n\n                      {/*<div className=\"rate\">4,8 / 5 — 27 задач</div> */}\n                      <div className=\"rate\">Пока нет отзывов.</div>\n                    </div>\n                  </div>\n                  <a className=\"candidat__name\" href=\"#\">\n                    {proposal.user.name}\n                    <br />\n                    {proposal.user.surname}\n                  </a>\n                  <div className=\"candidat__date\">45 минут назад</div>\n                </div>\n                <div className=\"candidat__body\">\n                  <div className=\"candidat__price\">\n                    <div className=\"title\">Цена</div>\n                    <div className=\"price\">{proposal.price} ₽</div>\n                  </div>\n                  <div className=\"candidat__message\">\n                    <p>{proposal.message}</p>\n                  </div>\n                </div>\n                <div className=\"candidat__foot\">\n                  <form\n                    action=\"/profile/accept-proposal\"\n                    method=\"POST\"\n                    className=\"acceptProposalForm\"\n                  >\n                    <CSRF />\n                    <input type=\"hidden\" value={job.id} name=\"jobId\" />\n                    <input\n                      type=\"hidden\"\n                      value={proposal.id}\n                      name=\"proposalId\"\n                    />\n                    <button className=\"t-btn transparent__green\" type=\"submit\">\n                      Принять\n                    </button>\n                  </form>\n                  <form action=\"/profile/deny-proposal\" method=\"POST\">\n                    <CSRF />\n                    <input type=\"hidden\" value={job.id} name=\"jobId\" />\n                    <input\n                      type=\"hidden\"\n                      value={proposal.id}\n                      name=\"proposalId\"\n                    />\n                    <button type=\"submit\" className=\"t-btn transparent__red\">\n                      Отклонить\n                    </button>\n                  </form>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileJobProposalsPage;\n","import React, { useState } from \"react\";\nimport Select from \"./Select\";\nimport { className } from \"../utils\";\n\nfunction Filter() {\n  const [subjects] = useState([0]),\n    [grades] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),\n    [active, setActive] = useState(false);\n  return (\n    <form className=\"catalog__filter\">\n      <div\n        className={className({ \"t-title\": true, show__filter: true, active })}\n        onClick={() => setActive(!active)}\n      >\n        <span>Фильтры</span>\n        <img src=\"/images/icons/down-arrow.svg\" />\n      </div>\n      <div\n        className=\"filter__box\"\n        style={{ display: active ? \"block\" : \"none\" }}\n      >\n        <input\n          className=\"t-input search\"\n          type=\"text\"\n          placeholder=\"Поиск\"\n          name=\"search\"\n        />\n        <div className=\"filter__section filter__price\">\n          <div className=\"section__title\">Цена</div>\n          <div className=\"section__box\">\n            <input\n              className=\"t-input\"\n              type=\"text\"\n              placeholder=\"Цена от\"\n              name=\"from\"\n            />\n            <input\n              className=\"t-input\"\n              type=\"text\"\n              placeholder=\"до, ₽\"\n              name=\"to\"\n            />{\" \"}\n          </div>\n        </div>\n        <button className=\"filter__btn\" type=\"submit\">\n          Применить\n        </button>\n        <div className=\"filter__section filter__things\">\n          <div className=\"section__title\">Предметы</div>\n          <div className=\"section__box\">\n            {subjects.map((subject) => (\n              <label className=\"thing\">\n                <input type=\"checkbox\" name=\"subjects\" value=\"Математика\" />\n                <span>\n                  Математика{\" \"}\n                  <img src=\"/images/icons/delete.png\" className=\"img-svg\" />{\" \"}\n                </span>\n              </label>\n            ))}\n          </div>\n\n          <div className=\"filter__section section__class\">\n            <div className=\"section__title\">Класс</div>\n            <div className=\"control__input\">\n              <Select\n                id=\"filter__class\"\n                name=\"classes[]\"\n                isMulti={true}\n                options={grades.map((grade) => ({\n                  label: `${grade} класс`,\n                  value: grade,\n                }))}\n                placeholder=\"Не выбран\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Filter;\n","import React, { useState } from \"react\";\nimport Job from \"../../models/Job\";\nimport Header from \"../Header\";\nimport Filter from \"../Filter\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../Pagination\";\nimport CSRF from \"../CSRF\";\nimport { className } from \"../../utils\";\n\nfunction ProfileJobsPage() {\n  const [jobs] = useState([new Job(), new Job()]);\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <div className=\"catalog\">\n        <div className=\"container catalog__cont\">\n          <Filter />\n          <div className=\"catalog__content posts__content\">\n            <div className=\"t-title lg\">Мои объявления</div>\n            <div className=\"content__box\">\n              <Link\n                className=\"item add__item\"\n                to=\"/profile/add-job\"\n                style={{ backgroundImage: \"url(/images/dashed.png)\" }}\n              >\n                <div className=\"add__icon\">\n                  <img className=\"img-svg\" src=\"/images/icons/add.svg\" alt=\"\" />\n                </div>\n                <div classs=\"item__title\">\n                  Создать\n                  <br />\n                  объявление\n                </div>\n              </Link>\n              {jobs.map((job) => (\n                <div className=\"item\">\n                  <div className=\"item__head\">\n                    <a className=\"thing single\" href=\"\">\n                      <span>Родной язык</span>\n                    </a>\n                    <a className=\"item__title\" href=\"#\">\n                      {job.title}\n                    </a>\n                    <div className=\"item__date\">{job.timeString}</div>\n                  </div>\n                  {job.isPending ? (\n                    <div className=\"item__foot\">\n                      <div className=\"item__foot-top\">\n                        <div className=\"foot__price\">\n                          <div className=\"title\">Цена</div>\n                          <div className=\"price\">{job.price} ₽</div>\n                        </div>\n                        <a\n                          className=\"item__author\"\n                          href=\"#\"\n                          style={{\n                            backgroundImage: `url(/${job.executant.user.profilePic})`,\n                          }}\n                        ></a>\n                      </div>\n                      <div className=\"item__foot-bottom\">\n                        <a\n                          className={className({\n                            \"t-btn\": true,\n                            transparent__blue: true,\n                            disabled: job.proposals.length === 0,\n                          })}\n                          href={`/profile/dialogs?id=${job.conversation.twilioSID}&peer=${job.conversation.peer.login}`}\n                        >\n                          Диалог\n                        </a>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"item__foot\">\n                      <div className=\"item__foot-top\">\n                        <div className=\"foot__price\">\n                          <div className=\"title\">Цена</div>\n                          <div className=\"price\">{job.price} ₽</div>\n                        </div>\n                        <div className=\"foot__buttons\">\n                          <a\n                            className=\"t-action\"\n                            href={`/profile/edit-job/${job.id}`}\n                          >\n                            <img\n                              className=\"img-svg\"\n                              src=\"/images/icons/action/edit.svg\"\n                              alt=\"\"\n                            />\n                          </a>\n                          <form action=\"/profile/delete-job\" method=\"POST\">\n                            <input type=\"hidden\" value={job.id} name=\"jobId\" />\n                            <CSRF />\n                            <button className=\"t-action\" type=\"submit\">\n                              <img\n                                className=\"img-svg\"\n                                src=\"/images/icons/action/delete.svg\"\n                                alt=\"\"\n                              />\n                            </button>\n                          </form>\n                        </div>\n                      </div>\n                      <div className=\"item__foot-bottom\">\n                        <a\n                          className=\"t-btn transparent__blue\"\n                          onClick={() => job.proposals.length}\n                          href={`/profile/show-proposals/${job.id}`}\n                        >\n                          Кандидаты\n                        </a>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n            <Pagination />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileJobsPage;\n","import User from \"./User\";\n\nclass Dialog {\n  get id() {\n    return 5;\n  }\n  get twilioSID() {\n    return \"THE_TWILIO_SID\";\n  }\n\n  get peer() {\n    return new User();\n  }\n}\n\nexport default Dialog;\n","import React, { useState } from \"react\";\nimport Header from \"../Header\";\nimport DialogLoading from \"../DialogLoading\";\nimport Dialog from \"../../models/Dialog\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProfileMessagesPage() {\n  const dialogs = [new Dialog(), new Dialog()],\n    [searchQuery, setSearchQuery] = useState(\"\");\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <DialogLoading />\n      <div className=\"container\">\n        <div className=\"dialog\">\n          <div className=\"dialog__box\">\n            <div className=\"\">\n              <div className=\"navigation__search\">\n                <input\n                  className=\"t-input\"\n                  id=\"search\"\n                  type=\"text\"\n                  placeholder=\"Поиск\"\n                  name=\"search\"\n                  autocomplete=\"off\"\n                  onKeyUp={(event) => {\n                    setSearchQuery(event.target.value);\n                  }}\n                />\n              </div>\n              <form className=\"dialog__users t-scroll\">\n                {dialogs.map((dialog) => (\n                  <Link\n                    to={`/profile/dialogs?id=${dialog.twilioSID}&peer=${dialog.peer.login}`}\n                  >\n                    <div\n                      className=\"dialog__user\"\n                      style={{\n                        display:\n                          !searchQuery.length ||\n                          `${dialog.peer.name} ${dialog.peer.surname}`.match(\n                            new RegExp(searchQuery, \"i\")\n                          )\n                            ? \"block\"\n                            : \"none\",\n                      }}\n                    >\n                      <div\n                        className=\"user__img\"\n                        style={{\n                          backgroundImage: `url(/${dialog.peer.profilePic})`,\n                        }}\n                      ></div>\n                      <div className=\"user__info\">\n                        <div className=\"user__name\">\n                          {dialog.peer.name} {dialog.peer.surname}\n                        </div>\n                        <div\n                          className=\"user__text\"\n                          id={`lastMessageText-${dialog.twilioSID}`}\n                        ></div>\n                      </div>\n                      <div\n                        className=\"dialog__time\"\n                        id={`lastMessageTime-${dialog.twilioSID}`}\n                      ></div>\n                      <div\n                        className=\"dialog__count\"\n                        id={`unreadCount-${dialog.twilioSID}`}\n                      ></div>\n                    </div>\n                  </Link>\n                ))}\n              </form>\n            </div>\n            <div className=\"dialog__content\"></div>\n          </div>\n        </div>\n      </div>\n      <script src=\"https://media.twiliocdn.com/sdk/js/chat/v3.3/twilio-chat.min.js\"></script>\n      <script src=\"/js/messages.js\"></script>\n    </div>\n  );\n}\n\nexport default ProfileMessagesPage;\n","import React, { useState } from \"react\";\nimport Job from \"../../models/Job\";\nimport Filter from \"../Filter\";\nimport CSRF from \"../CSRF\";\nimport Header from \"../Header\";\n\nfunction ProfilePendingJobsPage() {\n  const [pending] = useState([new Job(), new Job()]);\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <div className=\"catalog\">\n        <div className=\"container catalog__cont\">\n          <Filter />\n          <div className=\"catalog__content posts__content\">\n            <div className=\"t-title lg\">Выполняются</div>\n            <div className=\"content__box\">\n              <a\n                className=\"item add__item\"\n                href=\"/profile/add-job\"\n                style={{ backgroundImage: \"url('/images/dashed.png')\" }}\n              >\n                <div className=\"add__icon\">\n                  <img className=\"img-svg\" src=\"/images/icons/add.svg\" alt=\"\" />\n                </div>\n                <div className=\"item__title\">\n                  Создать\n                  <br />\n                  объявление\n                </div>\n              </a>\n              {pending.map((job) =>\n                job.isFinished ? (\n                  <div className=\"item\">\n                    <div className=\"item__head\">\n                      <a className=\"thing single\" href=\"#\">\n                        <span>Родной язык</span>\n                      </a>\n                      <a className=\"item__title\" href=\"#\">\n                        {job.title}\n                      </a>\n                      <div className=\"item__date\">{job.timeString}</div>\n                    </div>\n                    <div className=\"item__foot\">\n                      <div className=\"item__foot-top\">\n                        <div className=\"foot__price\">\n                          <div className=\"title\">Цена</div>\n                          <div className=\"price\">{job.executant.price} ₽</div>\n                        </div>\n                        <a\n                          className=\"item__author\"\n                          href=\"#\"\n                          style={{\n                            backgroundImage: `url(/${job.executant.user.profilePic})`,\n                          }}\n                        ></a>\n                      </div>\n                      <div className=\"item__foot-bottom\">\n                        <form action=\"/profile/confirm-finish\" method=\"POST\">\n                          <input type=\"hidden\" value={job.id} name=\"jobId\" />\n                          <CSRF />\n                          <button className=\"t-btn transparent__green\">\n                            Подтвердить\n                          </button>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"item\">\n                    <div className=\"item__head\">\n                      <a className=\"thing single\" href=\"\">\n                        <span>Биология</span>\n                      </a>\n                      <a className=\"item__title\" href=\"#\">\n                        {job.title}\n                      </a>\n                      <div className=\"item__date\">{job.tlmeString}</div>\n                    </div>\n                    <div className=\"item__foot\">\n                      <div className=\"item__foot-top\">\n                        <div className=\"foot__price\">\n                          <div className=\"title\">Цена</div>\n                          <div className=\"price\">{job.executant.price}₽</div>\n                        </div>\n                        <a\n                          className=\"item__author\"\n                          href=\"#\"\n                          style={{\n                            backgroundImage: `url(/${job.executant.user.profilePic})`,\n                          }}\n                        ></a>\n                      </div>\n                      <div className=\"item__foot-bottom\">\n                        <a\n                          className=\"t-btn transparent__blue\"\n                          href={`/profile/dialogs?id=${job.conversation.twilioSID}&peer=${job.conversation.peer.login}`}\n                        >\n                          Диалог\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                )\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePendingJobsPage;\n","import React from \"react\";\nimport Job from \"../../models/Job\";\nimport Header from \"../Header\";\nimport Filter from \"../Filter\";\nimport { Link } from \"react-router-dom\";\nimport CSRF from \"../CSRF\";\n\nfunction ProfileToDoJobsPage() {\n  const toDo = [new Job(), new Job()];\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <div className=\"catalog\">\n        <div className=\"container catalog__cont\">\n          <Filter />\n          <div className=\"catalog__content posts__content\">\n            <div className=\"t-title lg\">Выполняются</div>\n            <div className=\"content__box\">\n              <Link\n                className=\"item add__item\"\n                to=\"/profile/add-job\"\n                style={{\n                  backgroundImage: \"url('/images/dashed.png')\",\n                }}\n              >\n                <div className=\"add__icon\">\n                  <img className=\"img-svg\" src=\"/images/icons/add.svg\" alt=\"\" />\n                </div>\n                <div className=\"item__title\">\n                  Создать\n                  <br />\n                  объявление\n                </div>\n              </Link>\n              {toDo.map((job) =>\n                job.isFinished ? (\n                  <div className=\"item\">\n                    <div className=\"item__head\">\n                      <a className=\"thing single\" href=\"\">\n                        <span>Биология</span>\n                      </a>\n                      <a className=\"item__title\" href=\"#\">\n                        {job.title}\n                      </a>\n                      <div className=\"item__date\">{job.timeString}</div>\n                    </div>\n                    <div className=\"item__foot\">\n                      <div className=\"item__foot-top\">\n                        <div className=\"foot__price\">\n                          <div className=\"title\">Цена</div>\n                          <div className=\"price\">{job.executant.price}₽</div>\n                        </div>\n                        <Link\n                          className=\"item__author\"\n                          to={`/user-detail/${job.owner.login}`}\n                          style={{\n                            backgroundImage: `url(${job.owner.profilePic})`,\n                          }}\n                        ></Link>\n                      </div>\n                      <div className=\"item__foot-bottom\">\n                        <a\n                          className=\"t-btn transparent__blue\"\n                          href={`/profile/dialogs?id=${job.conversation.twilioSID}&peer=${job.conversation.peer.login}`}\n                        >\n                          {\" \"}\n                          Диалог\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"item\">\n                    <div className=\"item__head\">\n                      <a className=\"thing single\" href=\"#\">\n                        <span>Родной язык</span>\n                      </a>\n                      <a className=\"item__title\" href=\"#\">\n                        {job.title}\n                      </a>\n                      <div className=\"item__date\">{job.timeString}</div>\n                    </div>\n                    <div className=\"item__foot\">\n                      <div className=\"item__foot-top\">\n                        <div className=\"foot__price\">\n                          <div className=\"title\">Моя цена</div>\n                          <div className=\"price\">{job.executant.price}₽</div>\n                        </div>\n                        <Link\n                          className=\"item__author\"\n                          to={`/user-detail/${job.owner.login}`}\n                          style={{\n                            backgroundImage: `url(${job.owner.profilePic})`,\n                          }}\n                        ></Link>\n                      </div>\n                      <div className=\"item__foot-bottom\">\n                        <form action=\"/profile/notify-finish\" method=\"POST\">\n                          <input type=\"hidden\" value={job.id} name=\"jobId\" />\n                          <CSRF />\n                          <button className=\"t-btn transparent__green\">\n                            Я закончил\n                          </button>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                )\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileToDoJobsPage;\n","import React, { useState } from \"react\";\nimport Job from \"../../models/Job\";\nimport Header from \"../Header\";\nimport CSRF from \"../CSRF\";\n\nfunction ProfileTryJobPage() {\n  const [job] = useState(new Job());\n  return (\n    <div className=\"app-page\">\n      <Header />\n      <div className=\"create\">\n        <div className=\"container create__cont\">\n          <h1 className=\"t-title\">{job.title}</h1>\n          <form\n            className=\"create__box\"\n            enctype=\"application/x-www-form-urlencoded\"\n            method=\"post\"\n            action=\"/profile/try-job\"\n          >\n            <div className=\"create__item\">\n              <div className=\"form-control\">\n                <span className=\"control__label\">Цена</span>\n                <div className=\"control__input\">\n                  <input\n                    className=\"t-input\"\n                    type=\"text\"\n                    placeholder=\"Не указано\"\n                    autocomplete=\"off\"\n                    name=\"price\"\n                    required=\"required\"\n                  />\n                  ₽\n                </div>\n              </div>\n            </div>\n            <div className=\"create__item\">\n              <textarea\n                className=\"t-textarea\"\n                name=\"message\"\n                placeholder=\"Сообщение получателю\"\n                required=\"required\"\n              ></textarea>\n            </div>\n            <input type=\"hidden\" value={job.id} name=\"jobId\" />\n            <CSRF />\n            <button className=\"t-btn transparent__blue\" type=\"submit\">\n              Отправить предложение\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileTryJobPage;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LandingPage from \"./components/pages/LandingPage\";\nimport AllJobsPage from \"./components/pages/AllJobsPage\";\nimport JobDetailPage from \"./components/pages/JobDetailPage\";\nimport UserDetailPage from \"./components/pages/UserDetailPage\";\nimport CSRF from \"./components/CSRF\";\nimport SignUpPage from \"./components/pages/SignUpPage\";\nimport ResetPasswordPage from \"./components/pages/ResetPasswordPage\";\nimport Error404Page from \"./components/pages/Error404Page\";\nimport Error400Page from \"./components/pages/Error400Page\";\nimport Error403Page from \"./components/pages/Error403Page\";\nimport Error500Page from \"./components/pages/Error500Page\";\nimport ProfileMePage from \"./components/pages/ProfileMePage\";\nimport ProfileEditJobPage from \"./components/pages/ProfileEditJobPage\";\nimport ProfileAddJobPage from \"./components/pages/ProfileAddJobPage\";\nimport ProfileDialogPage from \"./components/pages/ProfileDialogPage\";\nimport ProfileJobProposalsPage from \"./components/pages/ProfileJobProposalsPage\";\nimport ProfileJobsPage from \"./components/pages/ProfileJobsPage\";\nimport ProfileMessagesPage from \"./components/pages/ProfileMessagesPage\";\nimport ProfilePendingJobsPage from \"./components/pages/ProfilePendingJobsPage\";\nimport ProfileToDoJobsPage from \"./components/pages/ProfileToDoJobsPage\";\nimport ProfileTryJobPage from \"./components/pages/ProfileTryJobPage\";\nimport Modal, { openModal } from \"./components/Modal\";\nimport Menu from \"./components/Menu\";\n\nfunction App() {\n  const [isAuthenicated] = useState(false),\n    [menuOpen, setMenuOpen] = useState(false);\n\n  return (\n    <div className=\"app\" style={{ overflow: menuOpen ? \"hidden\" : \"auto\" }}>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={LandingPage} />\n          <Route path=\"/all-jobs\" component={AllJobsPage} />\n          <Route path=\"/job-detail/:id\" exact component={JobDetailPage} />\n          <Route path=\"/user-detail/:login\" exact component={UserDetailPage} />\n          <Route path=\"/signup\" exact component={SignUpPage} />\n          <Route path=\"/reset/:token\" exact component={ResetPasswordPage} />\n          <Route path=\"/profile/me\" exact component={ProfileMePage} />\n          <Route path=\"/profile/add-job\" exact component={ProfileAddJobPage} />\n          <Route path=\"/profile/dialogs\" exact component={ProfileDialogPage} />\n          <Route\n            path=\"/profile/messages\"\n            exact\n            component={ProfileMessagesPage}\n          />\n          <Route\n            path=\"/profile/jobs/:id/edit\"\n            exact\n            component={ProfileEditJobPage}\n          />\n          <Route\n            path=\"/profile/jobs/proposals\"\n            exact\n            component={ProfileJobProposalsPage}\n          />\n          <Route path=\"/profile/jobs/\" exact component={ProfileJobsPage} />\n          <Route\n            path=\"/profile/pending\"\n            exact\n            component={ProfilePendingJobsPage}\n          />\n          <Route path=\"/profile/todo\" exact component={ProfileToDoJobsPage} />\n          <Route path=\"/profile/jobs/try\" exact component={ProfileTryJobPage} />\n          {/* Just to test */}\n          <Route path=\"/400\" exact component={Error400Page} />\n          <Route path=\"/403\" exact component={Error403Page} />\n          <Route path=\"/500\" exact component={Error500Page} />\n          {/* Tests finished */}\n          <Route component={Error404Page} />\n        </Switch>\n      </Router>\n\n      <Modal name=\"signin\" className=\"signin__modal\" title=\"Авторизация\">\n        <form\n          className=\"modal__form\"\n          method=\"POST\"\n          action=\"/login\"\n          id=\"loginForm\"\n        >\n          <CSRF />\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Логин или эл. почта</div>\n            <input\n              className=\"modal__input\"\n              type=\"text\"\n              name=\"login\"\n              required=\"required\"\n              placeholder=\"\"\n            />\n          </div>\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Пароль</div>\n            <input\n              className=\"modal__input\"\n              type=\"password\"\n              name=\"password\"\n              required=\"required\"\n              placeholder=\"\"\n            />\n          </div>\n          <button className=\"t-btn blue\" type=\"submit\">\n            Войти\n          </button>\n          <div className=\"modal__social\">\n            <div className=\"social__btns\">\n              <a className=\"social__btn\" href=\"/vk-auth\">\n                <img src=\"/images/icons/social/vk.svg\" />\n              </a>\n              <a className=\"social__btn\" href=\"/google-auth\">\n                <img src=\"/images/icons/social/google.svg\" />\n              </a>\n            </div>\n          </div>\n        </form>\n        <div className=\"modal__additional\">\n          <a\n            className=\"additional__btn modal__open\"\n            onClick={() => openModal(\"reset\")}\n          >\n            Забыл пароль\n          </a>\n          <a className=\"additional__btn\" href=\"/signup\">\n            Зарегистрироваться\n          </a>\n        </div>\n      </Modal>\n      <Modal\n        name=\"reset\"\n        className=\"modal__signin\"\n        title=\"Восстановление пароля\"\n      >\n        <form\n          className=\"modal__form\"\n          method=\"POST\"\n          action=\"/reset\"\n          id=\"resetForm\"\n        >\n          <CSRF />\n          <div className=\"modal__line\">\n            <div className=\"modal__label\">Адрес эл. почты</div>\n            <input\n              className=\"modal__input\"\n              type=\"email\"\n              name=\"email\"\n              required=\"required\"\n              placeholder=\"Адрес эл. почты\"\n            />\n          </div>\n          <div className=\"modal__warning\">\n            На этот адрес придёт уникальная ссылка для восстановления пароля\n          </div>\n          <button className=\"t-btn blue\" type=\"submit\">\n            Подтвердить\n          </button>\n        </form>\n        <div className=\"modal__additional\">\n          <a\n            className=\"additional__btn modal__open\"\n            onClick={() => openModal(\"signin\")}\n          >\n            Войти\n          </a>\n          <a className=\"additional__btn\" href=\"/signup\">\n            Зарегистрироваться\n          </a>\n        </div>\n      </Modal>\n\n      <Menu\n        onOpen={() => setMenuOpen(true)}\n        onClose={() => setMenuOpen(false)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname ==='localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname ==='[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV ==='production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker===null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state ==='installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status ===404 ||\n        (contentType != null && contentType.indexOf('javascript') ===-1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css/normalize.css\";\nimport \"./scss/style.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}